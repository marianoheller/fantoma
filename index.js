// Generated by purs bundle 0.13.8
var PS = {};
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  var composeFlipped = function (dictSemigroupoid) {
      return function (f) {
          return function (g) {
              return compose(dictSemigroupoid)(g)(f);
          };
      };
  };
  exports["compose"] = compose;
  exports["composeFlipped"] = composeFlipped;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  var flap = function (dictFunctor) {
      return function (ff) {
          return function (x) {
              return map(dictFunctor)(function (f) {
                  return f(x);
              })(ff);
          };
      };
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["flap"] = flap;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];                
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];                         
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  };                                                                                                    
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
})(PS);
(function(exports) {
  "use strict";

  const React = require("react");
  const createElement = React.createElement;
  const Fragment = React.Fragment;

  exports.empty = null;                          

  exports.element = (component) => (props) =>
    Array.isArray(props.children)
      ? createElement.apply(null, [component, props].concat(props.children))
      : createElement(component, props);

  exports.fragment = (children) =>
    createElement.apply(null, [Fragment, null].concat(children));

  exports.createContext = (defaultValue) => () =>
    React.createContext(defaultValue);

  exports.contextProvider = (context) => context.Provider;
})(PS["React.Basic"] = PS["React.Basic"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["React.Basic"] = $PS["React.Basic"] || {};
  var exports = $PS["React.Basic"];
  var $foreign = $PS["React.Basic"];
  var provider = function (context) {
      return function (value) {
          return function (children) {
              return $foreign.element($foreign.contextProvider(context))({
                  value: value,
                  children: children
              });
          };
      };
  };
  exports["provider"] = provider;
  exports["empty"] = $foreign.empty;
  exports["fragment"] = $foreign.fragment;
  exports["element"] = $foreign.element;
  exports["createContext"] = $foreign.createContext;
})(PS);
(function(exports) {
  "use strict";

  const ReactDOM = require("react-dom");

  exports.renderThen = (jsx) => (node) => (callback) => () =>
    ReactDOM.render(jsx, node, callback);
})(PS["React.Basic.DOM"] = PS["React.Basic.DOM"] || {});
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupUnit = new Semigroup(function (v) {
      return function (v1) {
          return Data_Unit.unit;
      };
  });
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  var semigroupFn = function (dictSemigroup) {
      return new Semigroup(function (f) {
          return function (g) {
              return function (x) {
                  return append(dictSemigroup)(f(x))(g(x));
              };
          };
      });
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupUnit"] = semigroupUnit;
  exports["semigroupFn"] = semigroupFn;
  exports["semigroupArray"] = semigroupArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];                
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  var semigroupEffect = function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEffect)(Data_Semigroup.append(dictSemigroup)));
  };
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
  exports["semigroupEffect"] = semigroupEffect;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["React.Basic.DOM"] = $PS["React.Basic.DOM"] || {};
  var exports = $PS["React.Basic.DOM"];
  var $foreign = $PS["React.Basic.DOM"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var text = Unsafe_Coerce.unsafeCoerce;
  var render$prime = $foreign.renderThen;
  var render = function (jsx) {
      return function (node) {
          return render$prime(jsx)(node)(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit));
      };
  };
  exports["render"] = render;
  exports["text"] = text;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["React.Basic.Events"] = $PS["React.Basic.Events"] || {};
  var exports = $PS["React.Basic.Events"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];          
  var EventFn = function (x) {
      return x;
  };
  var unsafeEventFn = EventFn;
  var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;
  var handler = function (v) {
      return function (cb) {
          return function ($22) {
              return cb(v($22))();
          };
      };
  };
  exports["unsafeEventFn"] = unsafeEventFn;
  exports["handler"] = handler;
  exports["semigroupoidBuilder"] = semigroupoidBuilder;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["React.Basic.DOM.Events"] = $PS["React.Basic.DOM.Events"] || {};
  var exports = $PS["React.Basic.DOM.Events"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var React_Basic_Events = $PS["React.Basic.Events"];
  var stopPropagation = React_Basic_Events.unsafeEventFn(function (e) {
      return Effect_Unsafe.unsafePerformEffect(function __do() {
          e.stopPropagation();
          return e;
      });
  });
  var currentTarget = React_Basic_Events.unsafeEventFn(function (e) {
      return e.currentTarget;
  });
  exports["stopPropagation"] = stopPropagation;
  exports["currentTarget"] = currentTarget;
})(PS);
(function(exports) {
  "use strict";

  const React = require("react");                  

  exports.unsafeCreateDOMComponent_ = (createElement) => (el) => {
    const flattenDataProp = (props, ref) => {
      var data = null;
      if (props._data != null) {
        data = { _data: undefined };
        Object.entries(props._data).forEach(function (entry) {
          data["data-" + entry[0]] = entry[1];
        });
      }
      var aria = null;
      if (props._aria != null) {
        aria = { _aria: undefined };
        Object.entries(props._aria).forEach(function (entry) {
          aria["aria-" + entry[0]] = entry[1];
        });
      }
      return Object.assign({ ref }, props, data, aria);
    };
    return () => {
      const c = React.forwardRef((props, ref) =>
        createElement(el)(flattenDataProp(props, ref))
      );
      c.displayName = el;
      return c;
    };
  };
})(PS["React.Basic.DOM.Internal"] = PS["React.Basic.DOM.Internal"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["React.Basic.DOM.Internal"] = $PS["React.Basic.DOM.Internal"] || {};
  var exports = $PS["React.Basic.DOM.Internal"];
  var $foreign = $PS["React.Basic.DOM.Internal"];
  var React_Basic = $PS["React.Basic"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var unsafeCreateDOMComponent = $foreign.unsafeCreateDOMComponent_(React_Basic.element);
  var css = Unsafe_Coerce.unsafeCoerce;
  exports["css"] = css;
  exports["unsafeCreateDOMComponent"] = unsafeCreateDOMComponent;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["React.Basic.DOM.Generated"] = $PS["React.Basic.DOM.Generated"] || {};
  var exports = $PS["React.Basic.DOM.Generated"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var React_Basic = $PS["React.Basic"];
  var React_Basic_DOM_Internal = $PS["React.Basic.DOM.Internal"];
  var _label$prime = Effect_Unsafe.unsafePerformEffect(React_Basic_DOM_Internal.unsafeCreateDOMComponent("label"));
  var label$prime = function (dictUnion) {
      return _label$prime;
  };
  var label = function (dictUnion) {
      return React_Basic.element(label$prime());
  };
  var _input$prime = Effect_Unsafe.unsafePerformEffect(React_Basic_DOM_Internal.unsafeCreateDOMComponent("input"));
  var input$prime = function (dictUnion) {
      return _input$prime;
  };
  var input = function (dictUnion) {
      return React_Basic.element(input$prime());
  };
  var _div$prime = Effect_Unsafe.unsafePerformEffect(React_Basic_DOM_Internal.unsafeCreateDOMComponent("div"));
  var div$prime = function (dictUnion) {
      return _div$prime;
  };
  var div = function (dictUnion) {
      return React_Basic.element(div$prime());
  };
  var div_ = function (children) {
      return div()({
          children: children
      });
  };
  var _button$prime = Effect_Unsafe.unsafePerformEffect(React_Basic_DOM_Internal.unsafeCreateDOMComponent("button"));
  var button$prime = function (dictUnion) {
      return _button$prime;
  };
  var button = function (dictUnion) {
      return React_Basic.element(button$prime());
  };
  var _audio$prime = Effect_Unsafe.unsafePerformEffect(React_Basic_DOM_Internal.unsafeCreateDOMComponent("audio"));
  var audio$prime = function (dictUnion) {
      return _audio$prime;
  };
  var audio = function (dictUnion) {
      return React_Basic.element(audio$prime());
  };
  exports["audio"] = audio;
  exports["button"] = button;
  exports["div"] = div;
  exports["div_"] = div_;
  exports["input"] = input;
  exports["label"] = label;
})(PS);
(function(exports) {
  "use strict";

  const React = require("react");

  const useEqCache = (eq, a) => {
    const memoRef = React.useRef(a);
    if (memoRef.current !== a && !eq(memoRef.current, a)) {
      memoRef.current = a;
    }
    return memoRef.current;
  };                         

  exports.useState_ = (tuple, initialState) => {
    const r = React.useState(initialState);
    const state = r[0];
    const setState = r[1];
    if (!setState.hasOwnProperty("$$reactBasicHooks$$cachedSetState")) {
      setState.$$reactBasicHooks$$cachedSetState = (update) => () =>
        setState(update);
    }
    return tuple(state, setState.$$reactBasicHooks$$cachedSetState);
  };

  exports.useEffect_ = (eq, deps, effect) => {
    const memoizedKey = useEqCache(eq, deps);
    React.useEffect(effect, [memoizedKey]);
  };                                                                         

  exports.useReducer_ = (tuple, reducer, initialState) => {
    const r = React.useReducer(reducer, initialState);
    const state = r[0];
    const dispatch = r[1];
    if (!dispatch.hasOwnProperty("$$reactBasicHooks$$cachedDispatch")) {
      dispatch.$$reactBasicHooks$$cachedDispatch = (action) => () =>
        dispatch(action);
    }
    return tuple(state, dispatch.$$reactBasicHooks$$cachedDispatch);
  };

  exports.useRef_ = React.useRef;

  exports.readRef_ = (ref) => ref.current;

  exports.writeRef_ = (ref, a) => {
    ref.current = a;
  };

  exports.useContext_ = React.useContext;      

  exports.unsafeSetDisplayName = (displayName, component) => {
    component.displayName = displayName;
    component.toString = () => displayName;
    return component;
  };
})(PS["React.Basic.Hooks"] = PS["React.Basic.Hooks"] || {});
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };                        
  exports.eqNumberImpl = refEq;
  exports.eqStringImpl = refEq;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqUnit = new Eq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var eqString = new Eq($foreign.eqStringImpl);
  var eqNumber = new Eq($foreign.eqNumberImpl);
  var eq = function (dict) {
      return dict.eq;
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["eqNumber"] = eqNumber;
  exports["eqString"] = eqString;
  exports["eqUnit"] = eqUnit;
})(PS);
(function(exports) {
  "use strict";

  exports.mkFn2 = function (fn) {
    /* jshint maxparams: 2 */
    return function (a, b) {
      return fn(a)(b);
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["mkFn2"] = $foreign.mkFn2;
})(PS);
(function(exports) {
  "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];          
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };                                                      
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["eqMaybe"] = eqMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];                                   
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["null"] = $foreign["null"];
  exports["notNull"] = $foreign.notNull;
})(PS);
(function(exports) {
  "use strict";

  exports.runEffectFn1 = function runEffectFn1(fn) {
    return function(a) {
      return function() {
        return fn(a);
      };
    };
  };

  exports.runEffectFn2 = function runEffectFn2(fn) {
    return function(a) {
      return function(b) {
        return function() {
          return fn(a, b);
        };
      };
    };
  };
})(PS["Effect.Uncurried"] = PS["Effect.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Uncurried"] = $PS["Effect.Uncurried"] || {};
  var exports = $PS["Effect.Uncurried"];
  var $foreign = $PS["Effect.Uncurried"];
  exports["runEffectFn1"] = $foreign.runEffectFn1;
  exports["runEffectFn2"] = $foreign.runEffectFn2;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Apply.Indexed"] = $PS["Control.Apply.Indexed"] || {};
  var exports = $PS["Control.Apply.Indexed"];                            
  var IxApply = function (IxFunctor0, iapply) {
      this.IxFunctor0 = IxFunctor0;
      this.iapply = iapply;
  };
  exports["IxApply"] = IxApply;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Bind.Indexed"] = $PS["Control.Bind.Indexed"] || {};
  var exports = $PS["Control.Bind.Indexed"];
  var IxBind = function (IxApply0, ibind) {
      this.IxApply0 = IxApply0;
      this.ibind = ibind;
  };
  var ibind = function (dict) {
      return dict.ibind;
  };
  exports["IxBind"] = IxBind;
  exports["ibind"] = ibind;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Functor.Indexed"] = $PS["Data.Functor.Indexed"] || {};
  var exports = $PS["Data.Functor.Indexed"];       
  var IxFunctor = function (imap) {
      this.imap = imap;
  };
  exports["IxFunctor"] = IxFunctor;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["React.Basic.Hooks.Internal"] = $PS["React.Basic.Hooks.Internal"] || {};
  var exports = $PS["React.Basic.Hooks.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Apply_Indexed = $PS["Control.Apply.Indexed"];
  var Control_Bind_Indexed = $PS["Control.Bind.Indexed"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Functor_Indexed = $PS["Data.Functor.Indexed"];
  var Effect = $PS["Effect"];                
  var Render = function (x) {
      return x;
  };
  var unsafeRenderEffect = Render;
  var unsafeHook = Render;
  var ixFunctorRender = new Data_Functor_Indexed.IxFunctor(function (f) {
      return function (v) {
          return Data_Functor.map(Effect.functorEffect)(f)(v);
      };
  });
  var ixApplyRender = new Control_Apply_Indexed.IxApply(function () {
      return ixFunctorRender;
  }, function (v) {
      return function (v1) {
          return Control_Apply.apply(Effect.applyEffect)(v)(v1);
      };
  });
  var ixBindRender = new Control_Bind_Indexed.IxBind(function () {
      return ixApplyRender;
  }, function (v) {
      return function (f) {
          return function __do() {
              var a = v();
              var v1 = f(a);
              return v1();
          };
      };
  });
  var functorRender = new Data_Functor.Functor(function (f) {
      return function (v) {
          return Data_Functor.map(Effect.functorEffect)(f)(v);
      };
  });
  var discard = function (dictIxBind) {
      return Control_Bind_Indexed.ibind(dictIxBind);
  };
  var coerceHook = function (dictNewtype) {
      return function (v) {
          return v;
      };
  };
  var bind = function (dictIxBind) {
      return Control_Bind_Indexed.ibind(dictIxBind);
  };
  var applyRender = function (dictTypeEquals) {
      return new Control_Apply.Apply(function () {
          return functorRender;
      }, function (v) {
          return function (v1) {
              return Control_Apply.apply(Effect.applyEffect)(v)(v1);
          };
      });
  };
  var applicativeRender = function (dictTypeEquals) {
      return new Control_Applicative.Applicative(function () {
          return applyRender(dictTypeEquals);
      }, function (a) {
          return Control_Applicative.pure(Effect.applicativeEffect)(a);
      });
  };
  exports["coerceHook"] = coerceHook;
  exports["unsafeHook"] = unsafeHook;
  exports["unsafeRenderEffect"] = unsafeRenderEffect;
  exports["bind"] = bind;
  exports["discard"] = discard;
  exports["ixBindRender"] = ixBindRender;
  exports["applicativeRender"] = applicativeRender;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["React.Basic.Hooks"] = $PS["React.Basic.Hooks"] || {};
  var exports = $PS["React.Basic.Hooks"];
  var $foreign = $PS["React.Basic.Hooks"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect = $PS["Effect"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];
  var React_Basic = $PS["React.Basic"];
  var React_Basic_Hooks_Internal = $PS["React.Basic.Hooks.Internal"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Reducer = function (x) {
      return x;
  };
  var writeRef = Effect_Uncurried.runEffectFn2($foreign.writeRef_);
  var useState = function (initialState) {
      return React_Basic_Hooks_Internal.unsafeHook(function () {
          return $foreign.useState_(Data_Function_Uncurried.mkFn2(Data_Tuple.Tuple.create), initialState);
      });
  };
  var useRef = function (initialValue) {
      return React_Basic_Hooks_Internal.unsafeHook(function () {
          return $foreign.useRef_(initialValue);
      });
  };
  var useReducer = function (initialState) {
      return function (v) {
          return React_Basic_Hooks_Internal.unsafeHook(function () {
              return $foreign.useReducer_(Data_Function_Uncurried.mkFn2(Data_Tuple.Tuple.create), v, initialState);
          });
      };
  };
  var useEffect = function (dictEq) {
      return function (deps) {
          return function (effect) {
              return React_Basic_Hooks_Internal.unsafeHook(function () {
                  return $foreign.useEffect_(Data_Function_Uncurried.mkFn2(Data_Eq.eq(dictEq)), deps, effect);
              });
          };
      };
  };
  var useContext = function (context) {
      return React_Basic_Hooks_Internal.unsafeHook(function () {
          return $foreign.useContext_(context);
      });
  };
  var unsafeReactFunctionComponent = Unsafe_Coerce.unsafeCoerce;
  var unsafeDiscardRenderEffects = Unsafe_Coerce.unsafeCoerce;
  var unsafeReactComponent = function (dictLacks) {
      return function (dictLacks1) {
          return function (name) {
              return function (renderFn) {
                  var c = unsafeReactFunctionComponent(function (props) {
                      return unsafeDiscardRenderEffects(renderFn(props))();
                  });
                  return function () {
                      return $foreign.unsafeSetDisplayName(name, c);
                  };
              };
          };
      };
  };
  var readRef = Effect_Uncurried.runEffectFn1($foreign.readRef_);
  var readRefMaybe = function (a) {
      return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)(readRef(a));
  };
  var reactComponent = function (dictLacks) {
      return function (dictLacks1) {
          return function (dictLacks2) {
              return unsafeReactComponent()();
          };
      };
  };                  
  var mkReducer = (function () {
      var $31 = Control_Applicative.pure(Effect.applicativeEffect);
      return function ($32) {
          return $31(Reducer(Data_Function_Uncurried.mkFn2($32)));
      };
  })();                                                                
  var component = function (name) {
      return function (renderFn) {
          return function __do() {
              var c = reactComponent()()()(name)(function ($33) {
                  return renderFn((function (v) {
                      return v.nested;
                  })($33));
              })();
              var $34 = React_Basic.element(c);
              return function ($35) {
                  return $34((function (v) {
                      return {
                          nested: v
                      };
                  })($35));
              };
          };
      };
  };
  exports["component"] = component;
  exports["useState"] = useState;
  exports["useEffect"] = useEffect;
  exports["mkReducer"] = mkReducer;
  exports["useReducer"] = useReducer;
  exports["readRefMaybe"] = readRefMaybe;
  exports["writeRef"] = writeRef;
  exports["useRef"] = useRef;
  exports["useContext"] = useContext;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Type.Equality"] = $PS["Type.Equality"] || {};
  var exports = $PS["Type.Equality"];
  var TypeEquals = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var refl = new TypeEquals(function (a) {
      return a;
  }, function (a) {
      return a;
  });
  exports["refl"] = refl;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Components.Controls"] = $PS["Components.Controls"] || {};
  var exports = $PS["Components.Controls"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Tuple = $PS["Data.Tuple"];
  var React_Basic = $PS["React.Basic"];
  var React_Basic_DOM = $PS["React.Basic.DOM"];
  var React_Basic_DOM_Events = $PS["React.Basic.DOM.Events"];
  var React_Basic_DOM_Generated = $PS["React.Basic.DOM.Generated"];
  var React_Basic_Events = $PS["React.Basic.Events"];
  var React_Basic_Hooks = $PS["React.Basic.Hooks"];
  var React_Basic_Hooks_Internal = $PS["React.Basic.Hooks.Internal"];
  var Type_Equality = $PS["Type.Equality"];                
  var mkControls = React_Basic_Hooks.component("Controls")(function (v) {
      var v1 = (function () {
          if (v.isPlaying) {
              return new Data_Tuple.Tuple("Stop", v.onStop);
          };
          if (!v.isPlaying) {
              return new Data_Tuple.Tuple("Play", v.onPlay);
          };
          throw new Error("Failed pattern match at Components.Controls (line 21, column 25 - line 23, column 34): " + [ v.isPlaying.constructor.name ]);
      })();
      return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))(React_Basic.fragment([ React_Basic_DOM_Generated.button()({
          onClick: React_Basic_Events.handler(React_Basic_DOM_Events.currentTarget)(function (v2) {
              return v1.value1;
          }),
          children: [ React_Basic_DOM.text(v1.value0) ],
          disabled: v.disabled
      }) ]));
  });
  exports["mkControls"] = mkControls;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");
  var mempty = function (dict) {
      return dict.mempty;
  };
  var monoidFn = function (dictMonoid) {
      return new Monoid(function () {
          return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
      }, function (v) {
          return mempty(dictMonoid);
      });
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidFn"] = monoidFn;
  exports["monoidString"] = monoidString;
})(PS);
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  exports["ff"] = ff;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["monoidDisj"] = monoidDisj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];                      
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var under = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return function (f) {
                  var $75 = unwrap(dictNewtype1);
                  var $76 = wrap(dictNewtype);
                  return function ($77) {
                      return $75(f($76($77)));
                  };
              };
          };
      };
  };                        
  var newtypeDisj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Disj.Disj);
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          var $96 = Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1));
                          var $97 = Data_Functor.map(dictFunctor)(wrap(dictNewtype));
                          return function ($98) {
                              return $96(f($97($98)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["under"] = under;
  exports["newtypeDisj"] = newtypeDisj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];                
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)((function () {
                  var $197 = Control_Apply.applySecond(dictApplicative.Apply0());
                  return function ($198) {
                      return $197(f($198));
                  };
              })())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var sequence_ = function (dictApplicative) {
      return function (dictFoldable) {
          return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var or = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["sequence_"] = sequence_;
  exports["intercalate"] = intercalate;
  exports["or"] = or;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.File.File"] = $PS["Web.File.File"] || {};
  var exports = $PS["Web.File.File"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var toBlob = Unsafe_Coerce.unsafeCoerce;
  exports["toBlob"] = toBlob;
})(PS);
(function(exports) {
  "use strict";                                                    

  exports._item = function (index) {
    return function (fileList) {
      return fileList.item(index);
    };
  };
})(PS["Web.File.FileList"] = PS["Web.File.FileList"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.File.FileList"] = $PS["Web.File.FileList"] || {};
  var exports = $PS["Web.File.FileList"];
  var $foreign = $PS["Web.File.FileList"];
  var Data_Nullable = $PS["Data.Nullable"];                    
  var item = function (i) {
      var $1 = $foreign["_item"](i);
      return function ($2) {
          return Data_Nullable.toMaybe($1($2));
      };
  };
  exports["item"] = item;
})(PS);
(function(exports) {
  "use strict";

  exports.createObjectURL = function (blob) {
    return function () {
      return URL.createObjectURL(blob);
    };
  };
})(PS["Web.File.Url"] = PS["Web.File.Url"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.File.Url"] = $PS["Web.File.Url"] || {};
  var exports = $PS["Web.File.Url"];
  var $foreign = $PS["Web.File.Url"];
  exports["createObjectURL"] = $foreign.createObjectURL;
})(PS);
(function(exports) {
  "use strict";

  exports._read = function (nothing, just, value) {
    var tag = Object.prototype.toString.call(value);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value);
    } else {
      return nothing;
    }
  };

  // ----------------------------------------------------------------------------

  exports.click = function (elt) {
    return function () {
      return elt.click();
    };
  };
})(PS["Web.HTML.HTMLElement"] = PS["Web.HTML.HTMLElement"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.HTMLElement"] = $PS["Web.HTML.HTMLElement"] || {};
  var exports = $PS["Web.HTML.HTMLElement"];
  var $foreign = $PS["Web.HTML.HTMLElement"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  var fromNode = function (x) {
      return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
  };
  exports["fromNode"] = fromNode;
  exports["toNode"] = toNode;
  exports["click"] = $foreign.click;
})(PS);
(function(exports) {
  "use strict";

  // ----------------------------------------------------------------------------

  exports.checked = function (input) {
    return function () {
      return input.checked;
    };
  };

  // ----------------------------------------------------------------------------

  exports._files = function (input) {
    return function () {
      return input.files;
    };
  };
})(PS["Web.HTML.HTMLInputElement"] = PS["Web.HTML.HTMLInputElement"] || {});
(function(exports) {
  "use strict";

  exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
    if (typeof window !== "undefined") {
      var ty = window[name];
      if (ty != null && value instanceof ty) {
        return just(value);
      }
      return nothing;
    } 
    var obj = value;
    while (obj != null) {
      var proto = Object.getPrototypeOf(obj);
      var constructorName = proto.constructor.name;
      if (constructorName === name) {
        return just(value);
      } else if (constructorName === "Object") {
        return nothing;
      }
      obj = proto;
    }
    return nothing;
  };
})(PS["Web.Internal.FFI"] = PS["Web.Internal.FFI"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.Internal.FFI"] = $PS["Web.Internal.FFI"] || {};
  var exports = $PS["Web.Internal.FFI"];
  var $foreign = $PS["Web.Internal.FFI"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var unsafeReadProtoTagged = function (name) {
      return function (value) {
          return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
      };
  };
  exports["unsafeReadProtoTagged"] = unsafeReadProtoTagged;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.HTMLInputElement"] = $PS["Web.HTML.HTMLInputElement"] || {};
  var exports = $PS["Web.HTML.HTMLInputElement"];
  var $foreign = $PS["Web.HTML.HTMLInputElement"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];                                  
  var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
  var files = (function () {
      var $4 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      return function ($5) {
          return $4($foreign["_files"]($5));
      };
  })();
  exports["fromEventTarget"] = fromEventTarget;
  exports["files"] = files;
  exports["checked"] = $foreign.checked;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Components.FileUpload"] = $PS["Components.FileUpload"] || {};
  var exports = $PS["Components.FileUpload"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var React_Basic = $PS["React.Basic"];
  var React_Basic_DOM = $PS["React.Basic.DOM"];
  var React_Basic_DOM_Events = $PS["React.Basic.DOM.Events"];
  var React_Basic_DOM_Generated = $PS["React.Basic.DOM.Generated"];
  var React_Basic_DOM_Internal = $PS["React.Basic.DOM.Internal"];
  var React_Basic_Events = $PS["React.Basic.Events"];
  var React_Basic_Hooks = $PS["React.Basic.Hooks"];
  var React_Basic_Hooks_Internal = $PS["React.Basic.Hooks.Internal"];
  var Type_Equality = $PS["Type.Equality"];
  var Web_File_File = $PS["Web.File.File"];
  var Web_File_FileList = $PS["Web.File.FileList"];
  var Web_File_Url = $PS["Web.File.Url"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_HTMLInputElement = $PS["Web.HTML.HTMLInputElement"];                
  var mkFileUpload = React_Basic_Hooks.component("FileUploadComponent")(function (v) {
      return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useRef(Data_Nullable["null"]))(function (inputRef) {
          var handleButtonClick = function (v1) {
              return function __do() {
                  var mNode = React_Basic_Hooks.readRefMaybe(inputRef)();
                  return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromNode)(mNode))(Web_HTML_HTMLElement.click)();
              };
          };
          var _onFileUpload = function ($5) {
              return v.onFileUpload(Data_Maybe.Just.create($5));
          };
          var handleChange = function (t) {
              return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Web_HTML_HTMLInputElement.fromEventTarget(t))(function (fileInput) {
                  return function __do() {
                      var maybeFiles = Web_HTML_HTMLInputElement.files(fileInput)();
                      return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(maybeFiles)((function () {
                          var $6 = Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)((function () {
                              var $9 = Control_Bind.bindFlipped(Effect.bindEffect)(_onFileUpload);
                              return function ($10) {
                                  return $9(Web_File_Url.createObjectURL(Web_File_File.toBlob($10)));
                              };
                          })());
                          var $7 = Web_File_FileList.item(0);
                          return function ($8) {
                              return $6($7($8));
                          };
                      })())();
                  };
              });
          };
          return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))(React_Basic.fragment([ React_Basic_DOM_Generated.input()({
              type: "file",
              accept: ".mp3,audio/*",
              onChange: React_Basic_Events.handler(React_Basic_DOM_Events.currentTarget)(handleChange),
              ref: inputRef,
              style: React_Basic_DOM_Internal.css({
                  display: "none"
              })
          }), React_Basic_DOM_Generated.button()({
              onClick: React_Basic_Events.handler(React_Basic_DOM_Events.currentTarget)(handleButtonClick),
              children: [ React_Basic_DOM.text("Load file") ],
              disabled: v.disabled
          }) ]));
      });
  });
  exports["mkFileUpload"] = mkFileUpload;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  }; 
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Generic.Rep"] = $PS["Data.Generic.Rep"] || {};
  var exports = $PS["Data.Generic.Rep"];             
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var NoArguments = (function () {
      function NoArguments() {

      };
      NoArguments.value = new NoArguments();
      return NoArguments;
  })();
  var Generic = function (from, to) {
      this.from = from;
      this.to = to;
  }; 
  var from = function (dict) {
      return dict.from;
  };
  exports["Generic"] = Generic;
  exports["from"] = from;
  exports["NoArguments"] = NoArguments;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];      
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Generic.Rep.Show"] = $PS["Data.Generic.Rep.Show"] || {};
  var exports = $PS["Data.Generic.Rep.Show"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];                
  var GenericShowArgs = function (genericShowArgs) {
      this.genericShowArgs = genericShowArgs;
  };
  var GenericShow = function (genericShow$prime) {
      this["genericShow'"] = genericShow$prime;
  };
  var genericShowArgsNoArguments = new GenericShowArgs(function (v) {
      return [  ];
  });
  var genericShowArgs = function (dict) {
      return dict.genericShowArgs;
  };
  var genericShowConstructor = function (dictGenericShowArgs) {
      return function (dictIsSymbol) {
          return new GenericShow(function (v) {
              var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var v1 = genericShowArgs(dictGenericShowArgs)(v);
              if (v1.length === 0) {
                  return ctor;
              };
              return "(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
          });
      };
  };
  var genericShow$prime = function (dict) {
      return dict["genericShow'"];
  }; 
  var genericShowSum = function (dictGenericShow) {
      return function (dictGenericShow1) {
          return new GenericShow(function (v) {
              if (v instanceof Data_Generic_Rep.Inl) {
                  return genericShow$prime(dictGenericShow)(v.value0);
              };
              if (v instanceof Data_Generic_Rep.Inr) {
                  return genericShow$prime(dictGenericShow1)(v.value0);
              };
              throw new Error("Failed pattern match at Data.Generic.Rep.Show (line 26, column 1 - line 28, column 40): " + [ v.constructor.name ]);
          });
      };
  };
  var genericShow = function (dictGeneric) {
      return function (dictGenericShow) {
          return function (x) {
              return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
          };
      };
  };
  exports["genericShow"] = genericShow;
  exports["genericShowArgsNoArguments"] = genericShowArgsNoArguments;
  exports["genericShowSum"] = genericShowSum;
  exports["genericShowConstructor"] = genericShowConstructor;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];          
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either (line 38, column 1 - line 38, column 52): " + [ m.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Profunctor"] = $PS["Data.Profunctor"] || {};
  var exports = $PS["Data.Profunctor"];
  var Control_Category = $PS["Control.Category"];        
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  }; 
  var dimap = function (dict) {
      return dict.dimap;
  };
  var rmap = function (dictProfunctor) {
      return function (b2c) {
          return dimap(dictProfunctor)(Control_Category.identity(Control_Category.categoryFn))(b2c);
      };
  };
  exports["dimap"] = dimap;
  exports["Profunctor"] = Profunctor;
  exports["rmap"] = rmap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Profunctor.Choice"] = $PS["Data.Profunctor.Choice"] || {};
  var exports = $PS["Data.Profunctor.Choice"];                 
  var Choice = function (Profunctor0, left, right) {
      this.Profunctor0 = Profunctor0;
      this.left = left;
      this.right = right;
  };
  var right = function (dict) {
      return dict.right;
  };
  exports["right"] = right;
  exports["Choice"] = Choice;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Profunctor.Strong"] = $PS["Data.Profunctor.Strong"] || {};
  var exports = $PS["Data.Profunctor.Strong"];       
  var Strong = function (Profunctor0, first, second) {
      this.Profunctor0 = Profunctor0;
      this.first = first;
      this.second = second;
  };
  var first = function (dict) {
      return dict.first;
  };
  exports["first"] = first;
  exports["Strong"] = Strong;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Lens.Internal.Forget"] = $PS["Data.Lens.Internal.Forget"] || {};
  var exports = $PS["Data.Lens.Internal.Forget"];
  var Data_Either = $PS["Data.Either"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Forget = function (x) {
      return x;
  };
  var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
      return function (v) {
          return function (v1) {
              return function ($27) {
                  return v1(f($27));
              };
          };
      };
  });
  var strongForget = new Data_Profunctor_Strong.Strong(function () {
      return profunctorForget;
  }, function (v) {
      return function ($28) {
          return v(Data_Tuple.fst($28));
      };
  }, function (v) {
      return function ($29) {
          return v(Data_Tuple.snd($29));
      };
  });
  var newtypeForget = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Forget);
  var choiceForget = function (dictMonoid) {
      return new Data_Profunctor_Choice.Choice(function () {
          return profunctorForget;
      }, function (v) {
          return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)));
      }, function (v) {
          return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v);
      });
  };
  exports["Forget"] = Forget;
  exports["newtypeForget"] = newtypeForget;
  exports["choiceForget"] = choiceForget;
  exports["strongForget"] = strongForget;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Maybe.First"] = $PS["Data.Maybe.First"] || {};
  var exports = $PS["Data.Maybe.First"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var First = function (x) {
      return x;
  };
  var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          if (v instanceof Data_Maybe.Just) {
              return v;
          };
          return v1;
      };
  });                                  
  var newtypeFirst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, First);
  var monoidFirst = new Data_Monoid.Monoid(function () {
      return semigroupFirst;
  }, Data_Maybe.Nothing.value);
  exports["First"] = First;
  exports["newtypeFirst"] = newtypeFirst;
  exports["monoidFirst"] = monoidFirst;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Lens.Fold"] = $PS["Data.Lens.Fold"] || {};
  var exports = $PS["Data.Lens.Fold"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_First = $PS["Data.Maybe.First"];
  var Data_Newtype = $PS["Data.Newtype"];
  var foldMapOf = Data_Newtype.under(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.Forget);
  var preview = function (p) {
      var $98 = Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst);
      var $99 = foldMapOf(p)(function ($101) {
          return Data_Maybe_First.First(Data_Maybe.Just.create($101));
      });
      return function ($100) {
          return $98($99($100));
      };
  };
  exports["preview"] = preview;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Lens.Lens"] = $PS["Data.Lens.Lens"] || {};
  var exports = $PS["Data.Lens.Lens"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var lens$prime = function (to) {
      return function (dictStrong) {
          return function (pab) {
              return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
                  return v.value1(v.value0);
              })(Data_Profunctor_Strong.first(dictStrong)(pab));
          };
      };
  };
  exports["lens'"] = lens$prime;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Lens.Prism"] = $PS["Data.Lens.Prism"] || {};
  var exports = $PS["Data.Lens.Prism"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];                                                                                         
  var prism = function (to) {
      return function (fro) {
          return function (dictChoice) {
              return function (pab) {
                  return Data_Profunctor.dimap(dictChoice.Profunctor0())(fro)(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)(Data_Profunctor.rmap(dictChoice.Profunctor0())(to)(pab)));
              };
          };
      };
  };
  var prism$prime = function (to) {
      return function (fro) {
          return function (dictChoice) {
              return prism(to)(function (s) {
                  return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(fro(s));
              })(dictChoice);
          };
      };
  };
  exports["prism'"] = prism$prime;
})(PS);
(function($PS) {
  "use strict";
  $PS["Slice"] = $PS["Slice"] || {};
  var exports = $PS["Slice"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = $PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_Fold = $PS["Data.Lens.Fold"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Prism = $PS["Data.Lens.Prism"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_First = $PS["Data.Maybe.First"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var AudioPlaying = (function () {
      function AudioPlaying() {

      };
      AudioPlaying.value = new AudioPlaying();
      return AudioPlaying;
  })();
  var VoiceRecording = (function () {
      function VoiceRecording() {

      };
      VoiceRecording.value = new VoiceRecording();
      return VoiceRecording;
  })();
  var VoicePlaying = (function () {
      function VoicePlaying() {

      };
      VoicePlaying.value = new VoicePlaying();
      return VoicePlaying;
  })();
  var Loading = (function () {
      function Loading() {

      };
      Loading.value = new Loading();
      return Loading;
  })();
  var PlaybackVoice = (function () {
      function PlaybackVoice() {

      };
      PlaybackVoice.value = new PlaybackVoice();
      return PlaybackVoice;
  })();
  var PlaybackAudio = (function () {
      function PlaybackAudio() {

      };
      PlaybackAudio.value = new PlaybackAudio();
      return PlaybackAudio;
  })();
  var NoPlayback = (function () {
      function NoPlayback() {

      };
      NoPlayback.value = new NoPlayback();
      return NoPlayback;
  })();
  var Idle = (function () {
      function Idle() {

      };
      Idle.value = new Idle();
      return Idle;
  })();
  var Nidle = (function () {
      function Nidle(value0) {
          this.value0 = value0;
      };
      Nidle.create = function (value0) {
          return new Nidle(value0);
      };
      return Nidle;
  })();

  // State
  var NotInitialized = (function () {
      function NotInitialized() {

      };
      NotInitialized.value = new NotInitialized();
      return NotInitialized;
  })();

  // State
  var Initialized = (function () {
      function Initialized(value0) {
          this.value0 = value0;
      };
      Initialized.create = function (value0) {
          return new Initialized(value0);
      };
      return Initialized;
  })();

  // Actions
  var SetAudioUrl = (function () {
      function SetAudioUrl(value0) {
          this.value0 = value0;
      };
      SetAudioUrl.create = function (value0) {
          return new SetAudioUrl(value0);
      };
      return SetAudioUrl;
  })();

  // Actions
  var FinishLoading = (function () {
      function FinishLoading() {

      };
      FinishLoading.value = new FinishLoading();
      return FinishLoading;
  })();

  // Actions
  var PlayAudio = (function () {
      function PlayAudio() {

      };
      PlayAudio.value = new PlayAudio();
      return PlayAudio;
  })();

  // Actions
  var StopAudio = (function () {
      function StopAudio() {

      };
      StopAudio.value = new StopAudio();
      return StopAudio;
  })();

  // Actions
  var StartRecording = (function () {
      function StartRecording() {

      };
      StartRecording.value = new StartRecording();
      return StartRecording;
  })();

  // Actions
  var StopRecording = (function () {
      function StopRecording() {

      };
      StopRecording.value = new StopRecording();
      return StopRecording;
  })();

  // Actions
  var PlayVoice = (function () {
      function PlayVoice() {

      };
      PlayVoice.value = new PlayVoice();
      return PlayVoice;
  })();

  // Actions
  var StopVoice = (function () {
      function StopVoice() {

      };
      StopVoice.value = new StopVoice();
      return StopVoice;
  })();

  // Actions
  var SetPlaybackOption = (function () {
      function SetPlaybackOption(value0) {
          this.value0 = value0;
      };
      SetPlaybackOption.create = function (value0) {
          return new SetPlaybackOption(value0);
      };
      return SetPlaybackOption;
  })();
  var initialState = NotInitialized.value;
  var initialInternalState = {
      audioUrl: Data_Maybe.Nothing.value,
      appStatus: Idle.value,
      playbackOption: NoPlayback.value
  };       
  var genericPlaybackOption = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof PlaybackVoice) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof PlaybackAudio) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof NoPlayback) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
      };
      throw new Error("Failed pattern match at Slice (line 34, column 1 - line 34, column 66): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return PlaybackVoice.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return PlaybackAudio.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return NoPlayback.value;
      };
      throw new Error("Failed pattern match at Slice (line 34, column 1 - line 34, column 66): " + [ x.constructor.name ]);
  });
  var showPlaybackOption = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericPlaybackOption)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "PlaybackVoice";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "PlaybackAudio";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "NoPlayback";
  }))))));      
  var eqStatus = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof AudioPlaying && y instanceof AudioPlaying) {
              return true;
          };
          if (x instanceof VoiceRecording && y instanceof VoiceRecording) {
              return true;
          };
          if (x instanceof VoicePlaying && y instanceof VoicePlaying) {
              return true;
          };
          if (x instanceof Loading && y instanceof Loading) {
              return true;
          };
          return false;
      };
  });
  var eqPlaybackOption = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof PlaybackVoice && y instanceof PlaybackVoice) {
              return true;
          };
          if (x instanceof PlaybackAudio && y instanceof PlaybackAudio) {
              return true;
          };
          if (x instanceof NoPlayback && y instanceof NoPlayback) {
              return true;
          };
          return false;
      };
  });
  var eqAppStatus = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Idle && y instanceof Idle) {
              return true;
          };
          if (x instanceof Nidle && y instanceof Nidle) {
              return Data_Eq.eq(eqStatus)(x.value0)(y.value0);
          };
          return false;
      };
  });
  var _Status = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Nidle.create)(function (v) {
          if (v instanceof Idle) {
              return Data_Maybe.Nothing.value;
          };
          if (v instanceof Nidle) {
              return new Data_Maybe.Just(v.value0);
          };
          throw new Error("Failed pattern match at Slice (line 129, column 7 - line 131, column 26): " + [ v.constructor.name ]);
      })(dictChoice);
  };
  var _PlaybackOption = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (record) {
          return new Data_Tuple.Tuple(record.playbackOption, function (s) {
              var $134 = {};
              for (var $135 in record) {
                  if ({}.hasOwnProperty.call(record, $135)) {
                      $134[$135] = record[$135];
                  };
              };
              $134.playbackOption = s;
              return $134;
          });
      })(dictStrong);
  };

  // Reducer
  var reducer = function (v) {
      return function (action) {
          if (v instanceof NotInitialized) {
              if (action instanceof SetAudioUrl && action.value0 instanceof Data_Maybe.Just) {
                  return Initialized.create({
                      audioUrl: new Data_Maybe.Just(action.value0.value0),
                      appStatus: new Nidle(Loading.value),
                      playbackOption: initialInternalState.playbackOption
                  });
              };
              return NotInitialized.value;
          };
          if (v instanceof Initialized) {
              return Initialized.create((function () {
                  if (action instanceof SetAudioUrl) {
                      return {
                          audioUrl: action.value0,
                          appStatus: new Nidle(Loading.value),
                          playbackOption: v.value0.playbackOption
                      };
                  };
                  if (action instanceof FinishLoading) {
                      return {
                          audioUrl: v.value0.audioUrl,
                          appStatus: Idle.value,
                          playbackOption: v.value0.playbackOption
                      };
                  };
                  if (action instanceof PlayAudio) {
                      return {
                          audioUrl: v.value0.audioUrl,
                          appStatus: new Nidle(AudioPlaying.value),
                          playbackOption: v.value0.playbackOption
                      };
                  };
                  if (action instanceof StopAudio) {
                      return {
                          audioUrl: v.value0.audioUrl,
                          appStatus: Idle.value,
                          playbackOption: v.value0.playbackOption
                      };
                  };
                  if (action instanceof PlayVoice) {
                      return {
                          audioUrl: v.value0.audioUrl,
                          appStatus: new Nidle(VoicePlaying.value),
                          playbackOption: v.value0.playbackOption
                      };
                  };
                  if (action instanceof StopVoice) {
                      var v1 = Data_Lens_Fold.preview(_PlaybackOption(Data_Lens_Internal_Forget.strongForget))(v.value0);
                      if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof PlaybackAudio) {
                          return {
                              audioUrl: v.value0.audioUrl,
                              appStatus: new Nidle(AudioPlaying.value),
                              playbackOption: v.value0.playbackOption
                          };
                      };
                      return {
                          audioUrl: v.value0.audioUrl,
                          appStatus: Idle.value,
                          playbackOption: v.value0.playbackOption
                      };
                  };
                  if (action instanceof StartRecording) {
                      return {
                          audioUrl: v.value0.audioUrl,
                          appStatus: new Nidle(VoiceRecording.value),
                          playbackOption: v.value0.playbackOption
                      };
                  };
                  if (action instanceof StopRecording) {
                      var v1 = Data_Lens_Fold.preview(_PlaybackOption(Data_Lens_Internal_Forget.strongForget))(v.value0);
                      if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof PlaybackVoice) {
                          return {
                              audioUrl: v.value0.audioUrl,
                              appStatus: new Nidle(VoicePlaying.value),
                              playbackOption: v.value0.playbackOption
                          };
                      };
                      return {
                          audioUrl: v.value0.audioUrl,
                          appStatus: Idle.value,
                          playbackOption: v.value0.playbackOption
                      };
                  };
                  if (action instanceof SetPlaybackOption) {
                      return {
                          audioUrl: v.value0.audioUrl,
                          appStatus: v.value0.appStatus,
                          playbackOption: action.value0
                      };
                  };
                  throw new Error("Failed pattern match at Slice (line 100, column 7 - line 113, column 70): " + [ action.constructor.name ]);
              })());
          };
          throw new Error("Failed pattern match at Slice (line 93, column 1 - line 93, column 45): " + [ v.constructor.name, action.constructor.name ]);
      };
  };

  // Optics
  var _InternalState = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Initialized.create)(function (v) {
          if (v instanceof NotInitialized) {
              return Data_Maybe.Nothing.value;
          };
          if (v instanceof Initialized) {
              return new Data_Maybe.Just(v.value0);
          };
          throw new Error("Failed pattern match at Slice (line 119, column 7 - line 121, column 32): " + [ v.constructor.name ]);
      })(dictChoice);
  };
  var _AppStatus = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (record) {
          return new Data_Tuple.Tuple(record.appStatus, function (s) {
              var $152 = {};
              for (var $153 in record) {
                  if ({}.hasOwnProperty.call(record, $153)) {
                      $152[$153] = record[$153];
                  };
              };
              $152.appStatus = s;
              return $152;
          });
      })(dictStrong);
  };

  // Selectors
  var getStatus = Data_Lens_Fold.preview((function () {
      var $155 = _InternalState(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst));
      var $156 = _AppStatus(Data_Lens_Internal_Forget.strongForget);
      var $157 = _Status(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst));
      return function ($158) {
          return $155($156($157($158)));
      };
  })());
  var selectIsAudioPlaying = (function () {
      var $159 = Data_Eq.eq(Data_Maybe.eqMaybe(eqStatus))(new Data_Maybe.Just(AudioPlaying.value));
      return function ($160) {
          return $159(getStatus($160));
      };
  })();
  var selectIsLoading = (function () {
      var $161 = Data_Eq.eq(Data_Maybe.eqMaybe(eqStatus))(new Data_Maybe.Just(Loading.value));
      return function ($162) {
          return $161(getStatus($162));
      };
  })();
  var selectIsVoicePlaying = (function () {
      var $163 = Data_Eq.eq(Data_Maybe.eqMaybe(eqStatus))(new Data_Maybe.Just(VoicePlaying.value));
      return function ($164) {
          return $163(getStatus($164));
      };
  })();
  var selectIsVoiceRecording = (function () {
      var $165 = Data_Eq.eq(Data_Maybe.eqMaybe(eqStatus))(new Data_Maybe.Just(VoiceRecording.value));
      return function ($166) {
          return $165(getStatus($166));
      };
  })();
  var selectIsIdle = (function () {
      var $167 = Data_Eq.eq(Data_Maybe.eqMaybe(eqAppStatus))(new Data_Maybe.Just(Idle.value));
      var $168 = Data_Lens_Fold.preview((function () {
          var $170 = _InternalState(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst));
          var $171 = _AppStatus(Data_Lens_Internal_Forget.strongForget);
          return function ($172) {
              return $170($171($172));
          };
      })());
      return function ($169) {
          return $167($168($169));
      };
  })();
  var selectIsAudioControlEnabled = (function () {
      var $173 = Data_Foldable.or(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean);
      var $174 = Data_Functor.flap(Data_Functor.functorArray)([ selectIsAudioPlaying, selectIsIdle ]);
      return function ($175) {
          return $173($174($175));
      };
  })();
  var selectIsAudioControlDisabled = (function () {
      var $176 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
      return function ($177) {
          return $176(selectIsAudioControlEnabled($177));
      };
  })();
  var selectIsNidle = (function () {
      var $178 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
      return function ($179) {
          return $178(selectIsIdle($179));
      };
  })();
  var selectIsRecordingEnabled = (function () {
      var $180 = Data_Foldable.or(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean);
      var $181 = Data_Functor.flap(Data_Functor.functorArray)([ selectIsVoicePlaying, selectIsVoiceRecording, selectIsIdle ]);
      return function ($182) {
          return $180($181($182));
      };
  })();
  var selectIsRecordingDisabled = (function () {
      var $183 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
      return function ($184) {
          return $183(selectIsRecordingEnabled($184));
      };
  })();
  exports["NotInitialized"] = NotInitialized;
  exports["Initialized"] = Initialized;
  exports["PlaybackVoice"] = PlaybackVoice;
  exports["PlaybackAudio"] = PlaybackAudio;
  exports["NoPlayback"] = NoPlayback;
  exports["Idle"] = Idle;
  exports["Nidle"] = Nidle;
  exports["AudioPlaying"] = AudioPlaying;
  exports["initialState"] = initialState;
  exports["SetAudioUrl"] = SetAudioUrl;
  exports["FinishLoading"] = FinishLoading;
  exports["PlayAudio"] = PlayAudio;
  exports["StopAudio"] = StopAudio;
  exports["StartRecording"] = StartRecording;
  exports["StopRecording"] = StopRecording;
  exports["PlayVoice"] = PlayVoice;
  exports["StopVoice"] = StopVoice;
  exports["SetPlaybackOption"] = SetPlaybackOption;
  exports["reducer"] = reducer;
  exports["selectIsNidle"] = selectIsNidle;
  exports["selectIsLoading"] = selectIsLoading;
  exports["selectIsAudioPlaying"] = selectIsAudioPlaying;
  exports["selectIsAudioControlDisabled"] = selectIsAudioControlDisabled;
  exports["selectIsRecordingDisabled"] = selectIsRecordingDisabled;
  exports["showPlaybackOption"] = showPlaybackOption;
  exports["eqPlaybackOption"] = eqPlaybackOption;
  exports["eqAppStatus"] = eqAppStatus;
})(PS);
(function($PS) {
  "use strict";
  $PS["Components.PlaybackOptions"] = $PS["Components.PlaybackOptions"] || {};
  var exports = $PS["Components.PlaybackOptions"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Show = $PS["Data.Show"];
  var Effect = $PS["Effect"];
  var React_Basic = $PS["React.Basic"];
  var React_Basic_DOM = $PS["React.Basic.DOM"];
  var React_Basic_DOM_Events = $PS["React.Basic.DOM.Events"];
  var React_Basic_DOM_Generated = $PS["React.Basic.DOM.Generated"];
  var React_Basic_Events = $PS["React.Basic.Events"];
  var React_Basic_Hooks = $PS["React.Basic.Hooks"];
  var React_Basic_Hooks_Internal = $PS["React.Basic.Hooks.Internal"];
  var Slice = $PS["Slice"];
  var Type_Equality = $PS["Type.Equality"];
  var Web_HTML_HTMLInputElement = $PS["Web.HTML.HTMLInputElement"];                
  var mkPlaybackOptions = React_Basic_Hooks.component("PlaybackOptions")(function (v) {
      var vals = [ Slice.PlaybackVoice.value, Slice.PlaybackAudio.value ];
      var handleChange = function (v1) {
          return function (t) {
              return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Web_HTML_HTMLInputElement.fromEventTarget(t))(function (input) {
                  return function __do() {
                      var isChecked = Web_HTML_HTMLInputElement.checked(input)();
                      return v.onChange((function () {
                          if (isChecked) {
                              return v1;
                          };
                          return Slice.NoPlayback.value;
                      })())();
                  };
              });
          };
      };
      return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))(React_Basic.fragment(Data_Functor.map(Data_Functor.functorArray)(function (v1) {
          return React_Basic_DOM_Generated.label()({
              children: [ React_Basic_DOM_Generated.input()({
                  type: "checkbox",
                  name: Data_Show.show(Slice.showPlaybackOption)(v1),
                  checked: Data_Eq.eq(Slice.eqPlaybackOption)(v1)(v.currentValue),
                  onClick: React_Basic_Events.handler(React_Basic_DOM_Events.currentTarget)(handleChange(v1)),
                  disabled: v.disabled
              }), React_Basic_DOM.text(Data_Show.show(Slice.showPlaybackOption)(v1)) ]
          });
      })(vals)));
  });
  exports["mkPlaybackOptions"] = mkPlaybackOptions;
})(PS);
(function(exports) {
  const Wavesurfer = require("wavesurfer.js");
  const RegionsPlugin = require("wavesurfer.js/dist/plugin/wavesurfer.regions");

  exports.create = function (config) {
    return function () {
      const defaults = {
        pixelRatio: 1,
        responsive: true,
        plugins: [
          RegionsPlugin.create({
            regions: [],
            dragSelection: {
              slop: 2,
            },
          }),
        ],
      };

      const ws = Wavesurfer.create(Object.assign(config, defaults));

      ws.on("ready", function () {
        ws.clearRegions();
      });

      ws.on("region-created", function (newId) {
        Object.keys(ws.regions.list)
          .filter((r) => r.id !== newId)
          .forEach((r) => {
            ws.regions.list[r].remove();
          });
      });

      return ws;
    };
  };

  exports.playRegion = function (ws) {
    return function () {
      const regions = Object.keys(ws.regions.list);
      if (regions.length) ws.regions.list[regions[0]].play();
      else ws.play();
    };
  };

  exports.stop = function (ws) {
    return function () {
      ws.stop();
    };
  };

  exports.destroy = function (ws) {
    return function () {
      ws.destroy();
    };
  };

  exports.load = function (url) {
    return function (ws) {
      return function () {
        ws.load(url);
      };
    };
  };

  exports.on = function (event) {
    return function (cb) {
      return function (ws) {
        return function () {
          ws.on(event, (...args) => cb(...args)());
        };
      };
    };
  };

  exports.zoom = function (n) {
    return function (ws) {
      return function () {
        ws.zoom(n);
      };
    };
  };

  exports.minPxPerSec = function (ws) {
    return ws.params.minPxPerSec;
  };

  exports.setCursorColor = function (color) {
    return function (ws) {
      return function () {
        ws.setCursorColor(color);
      };
    };
  };

  exports.clearRegions = function (ws) {
    return function () {
      ws.clearRegions();
    };
  };
})(PS["Foreign.WaveSurfer"] = PS["Foreign.WaveSurfer"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Foreign.WaveSurfer"] = $PS["Foreign.WaveSurfer"] || {};
  var exports = $PS["Foreign.WaveSurfer"];
  var $foreign = $PS["Foreign.WaveSurfer"];
  var onSeek = $foreign.on("seek");
  var onRegionFinish = function (cb) {
      return $foreign.on("region-out")(function (v) {
          return cb;
      });
  };
  var onReady = function (cb) {
      return $foreign.on("ready")(function (v) {
          return cb;
      });
  };                                 
  var onFinish = function (cb) {
      return $foreign.on("finish")(function (v) {
          return cb;
      });
  };
  exports["onSeek"] = onSeek;
  exports["onFinish"] = onFinish;
  exports["onReady"] = onReady;
  exports["onRegionFinish"] = onRegionFinish;
  exports["create"] = $foreign.create;
  exports["playRegion"] = $foreign.playRegion;
  exports["stop"] = $foreign.stop;
  exports["destroy"] = $foreign.destroy;
  exports["load"] = $foreign.load;
  exports["zoom"] = $foreign.zoom;
  exports["minPxPerSec"] = $foreign.minPxPerSec;
  exports["setCursorColor"] = $foreign.setCursorColor;
  exports["clearRegions"] = $foreign.clearRegions;
})(PS);
(function(exports) {
  "use strict";          

  exports.max = function (n1) {
    return function (n2) {
      return Math.max(n1, n2);
    };
  };
})(PS["Math"] = PS["Math"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["max"] = $foreign.max;
})(PS);
(function(exports) {
  "use strict";

  exports.setAttribute = function (name) {
    return function (value) {
      return function (element) {
        return function () {
          element.setAttribute(name, value);
          return {};
        };
      };
    };
  };
})(PS["Web.DOM.Element"] = PS["Web.DOM.Element"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.Element"] = $PS["Web.DOM.Element"] || {};
  var exports = $PS["Web.DOM.Element"];
  var $foreign = $PS["Web.DOM.Element"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];             
  var toNode = Unsafe_Coerce.unsafeCoerce;                                             
  var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("Element");
  exports["fromNode"] = fromNode;
  exports["toNode"] = toNode;
  exports["setAttribute"] = $foreign.setAttribute;
})(PS);
(function(exports) {
  "use strict";

  exports.deltaY = function (e) {
    return e.deltaY;
  };
})(PS["Web.UIEvent.WheelEvent"] = PS["Web.UIEvent.WheelEvent"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.UIEvent.WheelEvent"] = $PS["Web.UIEvent.WheelEvent"] || {};
  var exports = $PS["Web.UIEvent.WheelEvent"];
  var $foreign = $PS["Web.UIEvent.WheelEvent"];
  exports["deltaY"] = $foreign.deltaY;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Components.Player"] = $PS["Components.Player"] || {};
  var exports = $PS["Components.Player"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Foreign_WaveSurfer = $PS["Foreign.WaveSurfer"];
  var $$Math = $PS["Math"];
  var React_Basic_DOM_Events = $PS["React.Basic.DOM.Events"];
  var React_Basic_DOM_Generated = $PS["React.Basic.DOM.Generated"];
  var React_Basic_DOM_Internal = $PS["React.Basic.DOM.Internal"];
  var React_Basic_Events = $PS["React.Basic.Events"];
  var React_Basic_Hooks = $PS["React.Basic.Hooks"];
  var React_Basic_Hooks_Internal = $PS["React.Basic.Hooks.Internal"];
  var Slice = $PS["Slice"];
  var Type_Equality = $PS["Type.Equality"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];
  var Web_UIEvent_WheelEvent = $PS["Web.UIEvent.WheelEvent"];                
  var targetWheelEvent = React_Basic_Events.unsafeEventFn(function (e) {
      return e;
  });
  var calcZoom = function (delta) {
      return function (v) {
          var calced = v.value0 + delta;
          var px = $$Math.max(calced)(v.value1);
          return new Data_Tuple.Tuple(px, v.value1);
      };
  };
  var mkPlayer = React_Basic_Hooks.component("Player")(function (v) {
      return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useRef(Data_Nullable["null"]))(function (divRef) {
          return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useRef(Data_Nullable["null"]))(function (wsRef) {
              return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useState(new Data_Tuple.Tuple(0.0, 0.0)))(function (v1) {
                  return React_Basic_Hooks_Internal.discard(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useEffect(Data_Eq.eqUnit)(Data_Unit.unit)(function __do() {
                      var mElem = Data_Functor.map(Effect.functorEffect)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_DOM_Element.fromNode))(React_Basic_Hooks.readRefMaybe(divRef))();
                      Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(mElem)(function (ele) {
                          return function __do() {
                              var ws = Foreign_WaveSurfer.create({
                                  container: ele
                              })();
                              Foreign_WaveSurfer.onReady((function () {
                                  var minPx = Foreign_WaveSurfer.minPxPerSec(ws);
                                  return function __do() {
                                      v1.value1(function (v2) {
                                          return new Data_Tuple.Tuple(minPx, minPx);
                                      })();
                                      return v.onReady();
                                  };
                              })())(ws)();
                              Foreign_WaveSurfer.onSeek(v.onSeek)(ws)();
                              Foreign_WaveSurfer.onFinish(v.onFinish)(ws)();
                              Foreign_WaveSurfer.onRegionFinish(v.onRegionFinish)(ws)();
                              return React_Basic_Hooks.writeRef(wsRef)(Data_Nullable.notNull(ws))();
                          };
                      })();
                      return function __do() {
                          var mws = React_Basic_Hooks.readRefMaybe(wsRef)();
                          return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(mws)(function (ws) {
                              return Foreign_WaveSurfer.destroy(ws);
                          })();
                      };
                  }))(function () {
                      return React_Basic_Hooks_Internal.discard(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useEffect(Data_Eq.eqNumber)(v1.value0.value1)(function __do() {
                          var mws = React_Basic_Hooks.readRefMaybe(wsRef)();
                          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(mws)(Foreign_WaveSurfer.zoom(v1.value0.value1))();
                          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                      }))(function () {
                          return React_Basic_Hooks_Internal.discard(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useEffect(Data_Maybe.eqMaybe(Data_Eq.eqString))(v.murl)(function __do() {
                              var mws = React_Basic_Hooks.readRefMaybe(wsRef)();
                              var v2 = new Data_Tuple.Tuple(mws, v.murl);
                              if (v2.value0 instanceof Data_Maybe.Just && v2.value1 instanceof Data_Maybe.Just) {
                                  Foreign_WaveSurfer.load(v2.value1.value0)(v2.value0.value0)();
                                  Foreign_WaveSurfer.clearRegions(v2.value0.value0)();
                                  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                              };
                              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                          }))(function () {
                              return React_Basic_Hooks_Internal.discard(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useEffect(Slice.eqAppStatus)(v.status)(function __do() {
                                  var mws = React_Basic_Hooks.readRefMaybe(wsRef)();
                                  var v2 = new Data_Tuple.Tuple(mws, v.status);
                                  if (v2.value0 instanceof Data_Maybe.Just && (v2.value1 instanceof Slice.Nidle && v2.value1.value0 instanceof Slice.AudioPlaying)) {
                                      Foreign_WaveSurfer.setCursorColor("rgba(0,0,0,1)")(v2.value0.value0)();
                                      Foreign_WaveSurfer.playRegion(v2.value0.value0)();
                                      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                  };
                                  if (v2.value0 instanceof Data_Maybe.Just && v2.value1 instanceof Slice.Idle) {
                                      Foreign_WaveSurfer.stop(v2.value0.value0)();
                                      Foreign_WaveSurfer.setCursorColor("rgba(0,0,0,0)")(v2.value0.value0)();
                                      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                                  };
                                  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                              }))(function () {
                                  return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))(React_Basic_DOM_Generated.div()({
                                      ref: divRef,
                                      onWheel: React_Basic_Events.handler(Control_Semigroupoid.composeFlipped(React_Basic_Events.semigroupoidBuilder)(React_Basic_DOM_Events.stopPropagation)(targetWheelEvent))(function ($35) {
                                          return v1.value1(calcZoom(Web_UIEvent_WheelEvent.deltaY($35)));
                                      }),
                                      style: React_Basic_DOM_Internal.css({
                                          width: "100%"
                                      })
                                  }));
                              });
                          });
                      });
                  });
              });
          });
      });
  });
  exports["mkPlayer"] = mkPlayer;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Components.Spinner"] = $PS["Components.Spinner"] || {};
  var exports = $PS["Components.Spinner"];
  var Control_Applicative = $PS["Control.Applicative"];
  var React_Basic = $PS["React.Basic"];
  var React_Basic_DOM = $PS["React.Basic.DOM"];
  var React_Basic_DOM_Generated = $PS["React.Basic.DOM.Generated"];
  var React_Basic_DOM_Internal = $PS["React.Basic.DOM.Internal"];
  var React_Basic_Hooks = $PS["React.Basic.Hooks"];
  var React_Basic_Hooks_Internal = $PS["React.Basic.Hooks.Internal"];
  var Type_Equality = $PS["Type.Equality"];                
  var mkSpinner = React_Basic_Hooks.component("Spinner")(function (v) {
      return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))((function () {
          if (!v.isLoading) {
              return React_Basic.empty;
          };
          if (v.isLoading) {
              return React_Basic_DOM_Generated.div()({
                  children: [ React_Basic_DOM.text("Loading...") ],
                  style: React_Basic_DOM_Internal.css({
                      backgroundColor: "rgba(0, 0, 0, 0.5)",
                      zIndex: "10",
                      position: "fixed",
                      top: "0",
                      bottom: "0",
                      left: "0",
                      right: "0",
                      display: "flex",
                      justifyContent: "center",
                      alignItems: "center"
                  })
              });
          };
          throw new Error("Failed pattern match at Components.Spinner (line 14, column 9 - line 32, column 16): " + [ v.isLoading.constructor.name ]);
      })());
  });
  exports["mkSpinner"] = mkSpinner;
})(PS);
(function(exports) {
  "use strict";

  exports.createElement = function (localName) {
    return function (doc) {
      return function () {
        return doc.createElement(localName);
      };
    };
  };
})(PS["Web.DOM.Document"] = PS["Web.DOM.Document"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.Document"] = $PS["Web.DOM.Document"] || {};
  var exports = $PS["Web.DOM.Document"];
  var $foreign = $PS["Web.DOM.Document"];
  exports["createElement"] = $foreign.createElement;
})(PS);
(function(exports) {
  "use strict";

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        return parent.appendChild(node);
      };
    };
  };
})(PS["Web.DOM.Node"] = PS["Web.DOM.Node"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.Node"] = $PS["Web.DOM.Node"] || {};
  var exports = $PS["Web.DOM.Node"];
  var $foreign = $PS["Web.DOM.Node"];
  exports["appendChild"] = $foreign.appendChild;
})(PS);
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.HTMLAudioElement"] = $PS["Web.HTML.HTMLAudioElement"] || {};
  var exports = $PS["Web.HTML.HTMLAudioElement"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];
  var toHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;                                  
  var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
  exports["fromHTMLElement"] = fromHTMLElement;
  exports["toHTMLMediaElement"] = toHTMLMediaElement;
})(PS);
(function(exports) {
  "use strict";

  exports._body = function (doc) {
    return function () {
      return doc.body;
    };
  };
})(PS["Web.HTML.HTMLDocument"] = PS["Web.HTML.HTMLDocument"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var $foreign = $PS["Web.HTML.HTMLDocument"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];     
  var toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
  var toDocument = Unsafe_Coerce.unsafeCoerce;
  var body = (function () {
      var $8 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      return function ($9) {
          return $8($foreign["_body"]($9));
      };
  })();
  exports["toDocument"] = toDocument;
  exports["toNonElementParentNode"] = toNonElementParentNode;
  exports["body"] = body;
})(PS);
(function(exports) {
  "use strict";

  exports.setCurrentTime = function (currentTime) {
    return function (media) {
      return function () {
        media.currentTime = currentTime;
      };
    };
  };

  // ----------------------------------------------------------------------------

  exports.play = function (media) {
    return function () {
      media.play();
    };
  };

  // ----------------------------------------------------------------------------

  exports.pause = function (media) {
    return function () {
      media.pause();
    };
  };
})(PS["Web.HTML.HTMLMediaElement"] = PS["Web.HTML.HTMLMediaElement"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.HTMLMediaElement"] = $PS["Web.HTML.HTMLMediaElement"] || {};
  var exports = $PS["Web.HTML.HTMLMediaElement"];
  var $foreign = $PS["Web.HTML.HTMLMediaElement"];
  exports["setCurrentTime"] = $foreign.setCurrentTime;
  exports["play"] = $foreign.play;
  exports["pause"] = $foreign.pause;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  exports["document"] = $foreign.document;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Hooks.AudioPlayback"] = $PS["Hooks.AudioPlayback"] || {};
  var exports = $PS["Hooks.AudioPlayback"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var React_Basic_DOM = $PS["React.Basic.DOM"];
  var React_Basic_DOM_Events = $PS["React.Basic.DOM.Events"];
  var React_Basic_DOM_Generated = $PS["React.Basic.DOM.Generated"];
  var React_Basic_Events = $PS["React.Basic.Events"];
  var React_Basic_Hooks = $PS["React.Basic.Hooks"];
  var React_Basic_Hooks_Internal = $PS["React.Basic.Hooks.Internal"];
  var Type_Equality = $PS["Type.Equality"];
  var Web_DOM_Document = $PS["Web.DOM.Document"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];
  var Web_DOM_Node = $PS["Web.DOM.Node"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLAudioElement = $PS["Web.HTML.HTMLAudioElement"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_HTMLMediaElement = $PS["Web.HTML.HTMLMediaElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var Playing = (function () {
      function Playing() {

      };
      Playing.value = new Playing();
      return Playing;
  })();
  var Stopped = (function () {
      function Stopped() {

      };
      Stopped.value = new Stopped();
      return Stopped;
  })();
  var StartPlaying = (function () {
      function StartPlaying() {

      };
      StartPlaying.value = new StartPlaying();
      return StartPlaying;
  })();
  var StopPlaying = (function () {
      function StopPlaying() {

      };
      StopPlaying.value = new StopPlaying();
      return StopPlaying;
  })();
  var SetMUrl = (function () {
      function SetMUrl(value0) {
          this.value0 = value0;
      };
      SetMUrl.create = function (value0) {
          return new SetMUrl(value0);
      };
      return SetMUrl;
  })();
  var UseAudioPlayback = function (x) {
      return x;
  };
  var stop = (function () {
      var $25 = Data_Foldable.sequence_(Effect.applicativeEffect)(Data_Foldable.foldableArray);
      var $26 = Data_Functor.flap(Data_Functor.functorArray)([ Web_HTML_HTMLMediaElement.pause, Web_HTML_HTMLMediaElement.setCurrentTime(0.0) ]);
      return function ($27) {
          return $25($26($27));
      };
  })();
  var reducer = Effect_Unsafe.unsafePerformEffect(React_Basic_Hooks.mkReducer(function (s) {
      return function (a) {
          if (a instanceof StartPlaying) {
              return {
                  status: Playing.value,
                  murl: s.murl
              };
          };
          if (a instanceof StopPlaying) {
              return {
                  status: Stopped.value,
                  murl: s.murl
              };
          };
          if (a instanceof SetMUrl) {
              return {
                  murl: a.value0,
                  status: s.status
              };
          };
          throw new Error("Failed pattern match at Hooks.AudioPlayback (line 57, column 25 - line 60, column 42): " + [ a.constructor.name ]);
      };
  }));
  var ntUseAudioPlayback = new Data_Newtype.Newtype(function (n) {
      return n;
  }, UseAudioPlayback);
  var initializeAudioElement = function (audioRef) {
      return function (dispatch) {
          return function __do() {
              var mAudioNodeInitialized = React_Basic_Hooks.readRefMaybe(audioRef)();
              if (mAudioNodeInitialized instanceof Data_Maybe.Just) {
                  return Data_Unit.unit;
              };
              if (mAudioNodeInitialized instanceof Data_Maybe.Nothing) {
                  var doc = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window)();
                  var container = Web_DOM_Document.createElement("div")(Web_HTML_HTMLDocument.toDocument(doc))();
                  var mBodyHEle = Web_HTML_HTMLDocument.body(doc)();
                  var mElemNode = React_Basic_Hooks.readRefMaybe(audioRef)();
                  return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(mBodyHEle)(function (bodyHEle) {
                      return function __do() {
                          Web_DOM_Node.appendChild(Web_DOM_Element.toNode(container))(Web_HTML_HTMLElement.toNode(bodyHEle))();
                          return React_Basic_DOM.render(React_Basic_DOM_Generated.audio()({
                              ref: audioRef,
                              preload: "auto",
                              onEnded: React_Basic_Events.handler(React_Basic_DOM_Events.currentTarget)(function (v) {
                                  return dispatch(StopPlaying.value);
                              })
                          }))(container)();
                      };
                  })();
              };
              throw new Error("Failed pattern match at Hooks.AudioPlayback (line 106, column 3 - line 122, column 20): " + [ mAudioNodeInitialized.constructor.name ]);
          };
      };
  };
  var initialLocalState = {
      status: Stopped.value,
      murl: Data_Maybe.Nothing.value
  };
  var getMediaElement = function (audioRef) {
      return function __do() {
          var mElem = Data_Functor.map(Effect.functorEffect)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromNode))(React_Basic_Hooks.readRefMaybe(audioRef))();
          return Data_Functor.map(Data_Maybe.functorMaybe)(Web_HTML_HTMLAudioElement.toHTMLMediaElement)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLAudioElement.fromHTMLElement)(mElem));
      };
  };     
  var eqLocalStatus = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Playing && y instanceof Playing) {
              return true;
          };
          if (x instanceof Stopped && y instanceof Stopped) {
              return true;
          };
          return false;
      };
  });
  var useAudioPlayback = function (onAudioStop) {
      return React_Basic_Hooks_Internal.coerceHook(ntUseAudioPlayback)(React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useRef(Data_Nullable["null"]))(function (audioRef) {
          return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useReducer(initialLocalState)(reducer))(function (v) {
              return React_Basic_Hooks_Internal.discard(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useEffect(Data_Maybe.eqMaybe(Data_Eq.eqString))(v.value0.murl)(function __do() {
                  initializeAudioElement(audioRef)(v.value1)();
                  var mElem = Data_Functor.map(Effect.functorEffect)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_DOM_Element.fromNode))(React_Basic_Hooks.readRefMaybe(audioRef))();
                  Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(mElem)(function (elem) {
                      return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.value0.murl)(function (url) {
                          return Web_DOM_Element.setAttribute("src")(url)(elem);
                      });
                  })();
                  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
              }))(function () {
                  return React_Basic_Hooks_Internal.discard(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useEffect(eqLocalStatus)(v.value0.status)(function __do() {
                      (function () {
                          if (v.value0.status instanceof Playing) {
                              return Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Web_HTML_HTMLMediaElement.play))(getMediaElement(audioRef))();
                          };
                          if (v.value0.status instanceof Stopped) {
                              return Data_Semigroup.append(Effect.semigroupEffect(Data_Semigroup.semigroupUnit))(Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(stop))(getMediaElement(audioRef)))(onAudioStop)();
                          };
                          throw new Error("Failed pattern match at Hooks.AudioPlayback (line 91, column 7 - line 93, column 82): " + [ v.value0.status.constructor.name ]);
                      })();
                      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
                  }))(function () {
                      return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))({
                          mUrl: v.value0.murl,
                          setMUrl: function ($28) {
                              return v.value1(SetMUrl.create($28));
                          },
                          start: v.value1(StartPlaying.value),
                          stop: v.value1(StopPlaying.value),
                          isPlaying: Data_Eq.eq(eqLocalStatus)(v.value0.status)(Playing.value)
                      });
                  });
              });
          });
      }));
  };
  exports["useAudioPlayback"] = useAudioPlayback;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  exports["cons"] = $foreign.cons;
  exports["reverse"] = $foreign.reverse;
})(PS);
(function(exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};

    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */  
    var PURE    = "Pure";
    var THROW   = "Throw";
    var CATCH   = "Catch";
    var SYNC    = "Sync";
    var ASYNC   = "Async";
    var BIND    = "Bind";
    var BRACKET = "Bracket";
    var FORK    = "Fork";
    var SEQ     = "Sequential";

    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */  
    var MAP   = "Map";
    var APPLY = "Apply";
    var ALT   = "Alt";

    // Various constructors used in interpretation
    var CONS      = "Cons";      // Cons-list, for stacks
    var RESUME    = "Resume";    // Continue indiscriminately
    var RELEASE   = "Release";   // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
    var FIBER     = "Fiber";     // Actual fiber reference
    var THUNK     = "Thunk";     // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1  = _1;
      this._2  = _2;
      this._3  = _3;
    }

    function AffCtr(tag) {
      var fn = function (_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit    = 1024;
      var size     = 0;
      var ix       = 0;
      var queue    = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;
        while (size !== 0) {
          size--;
          thunk     = queue[ix];
          queue[ix] = void 0;
          ix        = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }

      return {
        isDraining: function () {
          return draining;
        },
        enqueue: function (cb) {
          var i, tmp;
          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers  = {};
      var fiberId = 0;
      var count   = 0;

      return {
        register: function (fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function (result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function () {
          return count === 0;
        },
        killAll: function (killError, cb) {
          return function () {
            if (count === 0) {
              return cb();
            }

            var killCount = 0;
            var kills     = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers  = {};
            fiberId = 0;
            count   = 0;

            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    }

    // Fiber state machine
    var SUSPENDED   = 0; // Suspended, pending a join.
    var CONTINUE    = 1; // Interpret the next instruction.
    var STEP_BIND   = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING     = 4; // An async effect is running.
    var RETURN      = 5; // The current stack has returned.
    var COMPLETED   = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0;

      // The current branch of the state machine.
      var status = SUSPENDED;

      // The current point of interest for the state machine branch.
      var step      = aff;  // Successful step
      var fail      = null; // Failure step
      var interrupt = null; // Asynchronous interrupt

      // Stack of continuations for the current fiber.
      var bhead = null;
      var btail = null;

      // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.
      var attempts = null;

      // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.
      var bracketCount = 0;

      // Each join gets a new id so they can be revoked.
      var joinId  = 0;
      var joins   = null;
      var rethrow = true;

      // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.
      function run(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp       = null;
          result    = null;
          attempt   = null;

          switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            try {
              step   = bhead(step);
              if (btail === null) {
                bhead = null;
              } else {
                bhead = btail._1;
                btail = btail._2;
              }
            } catch (e) {
              status = RETURN;
              fail   = util.left(e);
              step   = null;
            }
            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail   = step;
              step   = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step   = util.fromRight(step);
            }
            break;

          case CONTINUE:
            switch (step.tag) {
            case BIND:
              if (bhead) {
                btail = new Aff(CONS, bhead, btail);
              }
              bhead  = step._2;
              status = CONTINUE;
              step   = step._1;
              break;

            case PURE:
              if (bhead === null) {
                status = RETURN;
                step   = util.right(step._1);
              } else {
                status = STEP_BIND;
                step   = step._1;
              }
              break;

            case SYNC:
              status = STEP_RESULT;
              step   = runSync(util.left, util.right, step._1);
              break;

            case ASYNC:
              status = PENDING;
              step   = runAsync(util.left, step._1, function (result) {
                return function () {
                  if (runTick !== localRunTick) {
                    return;
                  }
                  runTick++;
                  Scheduler.enqueue(function () {
                    // It's possible to interrupt the fiber between enqueuing and
                    // resuming, so we need to check that the runTick is still
                    // valid.
                    if (runTick !== localRunTick + 1) {
                      return;
                    }
                    status = STEP_RESULT;
                    step   = result;
                    run(runTick);
                  });
                };
              });
              return;

            case THROW:
              status = RETURN;
              fail   = util.left(step._1);
              step   = null;
              break;

            // Enqueue the Catch so that we can call the error handler later on
            // in case of an exception.
            case CATCH:
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead    = null;
              btail    = null;
              status   = CONTINUE;
              step     = step._1;
              break;

            // Enqueue the Bracket so that we can call the appropriate handlers
            // after resource acquisition.
            case BRACKET:
              bracketCount++;
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead  = null;
              btail  = null;
              status = CONTINUE;
              step   = step._1;
              break;

            case FORK:
              status = STEP_RESULT;
              tmp    = Fiber(util, supervisor, step._2);
              if (supervisor) {
                supervisor.register(tmp);
              }
              if (step._1) {
                tmp.run();
              }
              step = util.right(tmp);
              break;

            case SEQ:
              status = CONTINUE;
              step   = sequential(util, supervisor, step._1);
              break;
            }
            break;

          case RETURN:
            bhead = null;
            btail = null;
            // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.
            if (attempts === null) {
              status = COMPLETED;
              step   = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp      = attempts._3;
              attempt  = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
              // We cannot recover from an unmasked interrupt. Otherwise we should
              // continue stepping, or run the exception handler if an exception
              // was raised.
              case CATCH:
                // We should compare the interrupt status as well because we
                // only want it to apply if there has been an interrupt since
                // enqueuing the catch.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  status = RETURN;
                } else if (fail) {
                  status = CONTINUE;
                  step   = attempt._2(util.fromLeft(fail));
                  fail   = null;
                }
                break;

              // We cannot resume from an unmasked interrupt or exception.
              case RESUME:
                // As with Catch, we only want to ignore in the case of an
                // interrupt since enqueing the item.
                if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {
                  status = RETURN;
                } else {
                  bhead  = attempt._1;
                  btail  = attempt._2;
                  status = STEP_BIND;
                  step   = util.fromRight(step);
                }
                break;

              // If we have a bracket, we should enqueue the handlers,
              // and continue with the success branch only if the fiber has
              // not been interrupted. If the bracket acquisition failed, we
              // should not run either.
              case BRACKET:
                bracketCount--;
                if (fail === null) {
                  result   = util.fromRight(step);
                  // We need to enqueue the Release with the same interrupt
                  // status as the Bracket that is initiating it.
                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                  // We should only coninue as long as the interrupt status has not changed or
                  // we are currently within a non-interruptable finalizer.
                  if (interrupt === tmp || bracketCount > 0) {
                    status = CONTINUE;
                    step   = attempt._3(result);
                  }
                }
                break;

              // Enqueue the appropriate handler. We increase the bracket count
              // because it should not be cancelled.
              case RELEASE:
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                // It has only been killed if the interrupt status has changed
                // since we enqueued the item, and the bracket count is 0. If the
                // bracket count is non-zero then we are in a masked state so it's
                // impossible to be killed.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                } else if (fail) {
                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                } else {
                  step = attempt._1.completed(util.fromRight(step))(attempt._2);
                }
                fail = null;
                bracketCount++;
                break;

              case FINALIZER:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                step     = attempt._1;
                break;

              case FINALIZED:
                bracketCount--;
                status = RETURN;
                step   = attempt._1;
                fail   = attempt._2;
                break;
              }
            }
            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }
            joins = null;
            // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.
            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0);
            // If we have an unhandled exception, and no other fiber has joined
            // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING: return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid    = joinId++;
          joins      = joins || {};
          joins[jid] = join;

          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function (/* unused */) {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status    = COMPLETED;
            step      = interrupt;
            run(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }
              status   = RETURN;
              step     = null;
              fail     = null;
              run(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step   = null;
              fail   = null;
            }
          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run(runTick);
          }
          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function () {
          return status === SUSPENDED;
        },
        run: function () {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                run(runTick);
              });
            } else {
              run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId   = 0;
      var fibers    = {};

      // Table of currently running cancelers, as a product of `Alt` behavior.
      var killId    = 0;
      var kills     = {};

      // Error used for early cancelation on Alt branches.
      var early     = new Error("[ParAff] Early exit");

      // Error used to kill the entire tree.
      var interrupt = null;

      // The root pointer of the tree.
      var root      = EMPTY;

      // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.
      function kill(error, par, cb) {
        var step  = par;
        var head  = null;
        var tail  = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;
                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            }
            // Terminal case.
            if (head === null) {
              break loop;
            }
            // Go down the right side of the tree.
            step = head._2;
            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }
            break;
          case MAP:
            step = step._2;
            break;
          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = step;
            step = step._1;
            break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      }

      // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.
      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;

          // We should never continue if the entire tree has been interrupted.
          if (interrupt !== null) {
            return;
          }

          // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.
          if (head === null) {
            cb(fail || step)();
            return;
          }

          // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?
          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step    = head._3;
            } else {
              head._3 = fail;
            }
            break;
          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3;
            // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.
            if (fail) {
              head._3 = fail;
              tmp     = true;
              kid     = killId++;

              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }
            break;
          case ALT:
            lhs = head._1._3;
            rhs = head._2._3;
            // We can only proceed if both have resolved or we have a success
            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            }
            // If both sides resolve with an error, we should continue with the
            // first error
            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail    = step === lhs ? rhs : lhs;
              step    = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp     = true;
              kid     = killId++;
              // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.
              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }
            break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      }

      // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.
      function run() {
        var status = CONTINUE;
        var step   = par;
        var head   = null;
        var tail   = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
          case CONTINUE:
            switch (step.tag) {
            case MAP:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(MAP, step._1, EMPTY, EMPTY);
              step = step._2;
              break;
            case APPLY:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(APPLY, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(ALT, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            default:
              // When we hit a leaf value, we suspend the stack in the `FORKED`.
              // When the fiber resolves, it can bubble back up the tree.
              fid    = fiberId++;
              status = RETURN;
              tmp    = step;
              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
              tmp    = Fiber(util, supervisor, tmp);
              tmp.onComplete({
                rethrow: false,
                handler: resolve(step)
              })();
              fibers[fid] = tmp;
              if (supervisor) {
                supervisor.register(tmp);
              }
            }
            break;
          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            }
            // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.
            if (head._1 === EMPTY) {
              head._1 = step;
              status  = CONTINUE;
              step    = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step    = head;
              if (tail === null) {
                head  = null;
              } else {
                head  = tail._1;
                tail  = tail._2;
              }
            }
          }
        }

        // Keep a reference to the tree root so it can be cancelled.
        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }

      // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.
      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);

        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }
              return nonCanceler;
            };
          });
        };
      }

      run();

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY       = EMPTY;
    Aff.Pure        = AffCtr(PURE);
    Aff.Throw       = AffCtr(THROW);
    Aff.Catch       = AffCtr(CATCH);
    Aff.Sync        = AffCtr(SYNC);
    Aff.Async       = AffCtr(ASYNC);
    Aff.Bind        = AffCtr(BIND);
    Aff.Bracket     = AffCtr(BRACKET);
    Aff.Fork        = AffCtr(FORK);
    Aff.Seq         = AffCtr(SEQ);
    Aff.ParMap      = AffCtr(MAP);
    Aff.ParApply    = AffCtr(APPLY);
    Aff.ParAlt      = AffCtr(ALT);
    Aff.Fiber       = Fiber;
    Aff.Supervisor  = Supervisor;
    Aff.Scheduler   = Scheduler;
    Aff.nonCanceler = nonCanceler;

    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._liftEffect = Aff.Sync;

  exports._parAffMap = function (f) {
    return function (aff) {
      return Aff.ParMap(f, aff);
    };
  };

  exports._parAffApply = function (aff1) {
    return function (aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  };

  exports.makeAff = Aff.Async;

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };  

  exports._sequential = Aff.Seq;
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function(exports) {
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var $$throw = function ($2) {
      return $foreign.throwException($foreign.error($2));
  };
  exports["throw"] = $$throw;
  exports["error"] = $foreign.error;
  exports["throwException"] = $foreign.throwException;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var MonadError = function (MonadThrow0, catchError) {
      this.MonadThrow0 = MonadThrow0;
      this.catchError = catchError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };                          
  var monadThrowEffect = new MonadThrow(function () {
      return Effect.monadEffect;
  }, Effect_Exception.throwException);                    
  var catchError = function (dict) {
      return dict.catchError;
  };
  var $$try = function (dictMonadError) {
      return function (a) {
          return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))((function () {
              var $17 = Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0());
              return function ($18) {
                  return $17(Data_Either.Left.create($18));
              };
          })());
      };
  };
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
  exports["MonadError"] = MonadError;
  exports["try"] = $$try;
  exports["monadThrowEffect"] = monadThrowEffect;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Parallel.Class"] = $PS["Control.Parallel.Class"] || {};
  var exports = $PS["Control.Parallel.Class"];
  var Parallel = function (Applicative1, Monad0, parallel, sequential) {
      this.Applicative1 = Applicative1;
      this.Monad0 = Monad0;
      this.parallel = parallel;
      this.sequential = sequential;
  };
  var sequential = function (dict) {
      return dict.sequential;
  };
  var parallel = function (dict) {
      return dict.parallel;
  };
  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
  exports["Parallel"] = Parallel;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Parallel"] = $PS["Control.Parallel"] || {};
  var exports = $PS["Control.Parallel"];
  var Control_Category = $PS["Control.Category"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Foldable = $PS["Data.Foldable"];                      
  var parTraverse_ = function (dictParallel) {
      return function (dictFoldable) {
          return function (f) {
              var $17 = Control_Parallel_Class.sequential(dictParallel);
              var $18 = Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)((function () {
                  var $20 = Control_Parallel_Class.parallel(dictParallel);
                  return function ($21) {
                      return $20(f($21));
                  };
              })());
              return function ($19) {
                  return $17($18($19));
              };
          };
      };
  };
  var parSequence_ = function (dictParallel) {
      return function (dictFoldable) {
          return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["parSequence_"] = parSequence_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Class"] = $PS["Effect.Class"] || {};
  var exports = $PS["Effect.Class"];
  var Control_Category = $PS["Control.Category"];
  var Effect = $PS["Effect"];                
  var MonadEffect = function (Monad0, liftEffect) {
      this.Monad0 = Monad0;
      this.liftEffect = liftEffect;
  };
  var monadEffectEffect = new MonadEffect(function () {
      return Effect.monadEffect;
  }, Control_Category.identity(Control_Category.categoryFn));
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
  exports["monadEffectEffect"] = monadEffectEffect;
})(PS);
(function(exports) {
  "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith()(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Aff"] = $PS["Effect.Aff"] || {};
  var exports = $PS["Effect.Aff"];
  var $foreign = $PS["Effect.Aff"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Canceler = function (x) {
      return x;
  };           
  var functorParAff = new Data_Functor.Functor($foreign["_parAffMap"]);
  var functorAff = new Data_Functor.Functor($foreign["_map"]);
  var ffiUtil = (function () {
      var unsafeFromRight = function (v) {
          if (v instanceof Data_Either.Right) {
              return v.value0;
          };
          if (v instanceof Data_Either.Left) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 400, column 21 - line 402, column 54): " + [ v.constructor.name ]);
      };
      var unsafeFromLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return v.value0;
          };
          if (v instanceof Data_Either.Right) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 395, column 20 - line 397, column 54): " + [ v.constructor.name ]);
      };
      var isLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return true;
          };
          if (v instanceof Data_Either.Right) {
              return false;
          };
          throw new Error("Failed pattern match at Effect.Aff (line 390, column 12 - line 392, column 20): " + [ v.constructor.name ]);
      };
      return {
          isLeft: isLeft,
          fromLeft: unsafeFromLeft,
          fromRight: unsafeFromRight,
          left: Data_Either.Left.create,
          right: Data_Either.Right.create
      };
  })();
  var makeFiber = function (aff) {
      return $foreign["_makeFiber"](ffiUtil, aff);
  };
  var launchAff = function (aff) {
      return function __do() {
          var fiber = makeFiber(aff)();
          fiber.run();
          return fiber;
      };
  };
  var launchAff_ = (function () {
      var $43 = Data_Functor["void"](Effect.functorEffect);
      return function ($44) {
          return $43(launchAff($44));
      };
  })();
  var applyParAff = new Control_Apply.Apply(function () {
      return functorParAff;
  }, $foreign["_parAffApply"]);
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, $foreign["_bind"]);
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, $foreign["_pure"]);
  var monadEffectAff = new Effect_Class.MonadEffect(function () {
      return monadAff;
  }, $foreign["_liftEffect"]);
  var effectCanceler = (function () {
      var $45 = Effect_Class.liftEffect(monadEffectAff);
      return function ($46) {
          return Canceler(Data_Function["const"]($45($46)));
      };
  })();
  var killFiber = function (e) {
      return function (v) {
          return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {
              if (v1) {
                  return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
              };
              return $foreign.makeAff(function (k) {
                  return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
              });
          });
      };
  };   
  var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
      return monadAff;
  }, $foreign["_throwError"]);
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowAff;
  }, $foreign["_catchError"]);
  var parallelAff = new Control_Parallel_Class.Parallel(function () {
      return applicativeParAff;
  }, function () {
      return monadAff;
  }, Unsafe_Coerce.unsafeCoerce, $foreign["_sequential"]);
  var applicativeParAff = new Control_Applicative.Applicative(function () {
      return applyParAff;
  }, (function () {
      var $53 = Control_Parallel_Class.parallel(parallelAff);
      var $54 = Control_Applicative.pure(applicativeAff);
      return function ($55) {
          return $53($54($55));
      };
  })());
  var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return function (err) {
              return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([ v(err), v1(err) ]);
          };
      };
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  var monoidCanceler = new Data_Monoid.Monoid(function () {
      return semigroupCanceler;
  }, nonCanceler);
  exports["launchAff"] = launchAff;
  exports["launchAff_"] = launchAff_;
  exports["killFiber"] = killFiber;
  exports["functorAff"] = functorAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["monadEffectAff"] = monadEffectAff;
  exports["monoidCanceler"] = monoidCanceler;
  exports["makeAff"] = $foreign.makeAff;
})(PS);
(function(exports) {
  "use strict";

  // TODO: improve this function
  exports._fromBlobs = function (blobs) {
    try {
      return new Blob(blobs, { type: blobs[0].type });
    } catch (e) {
      return new Blob(blobs);
    }
  };
})(PS["Foreign.Blob"] = PS["Foreign.Blob"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Foreign.Blob"] = $PS["Foreign.Blob"] || {};
  var exports = $PS["Foreign.Blob"];
  var $foreign = $PS["Foreign.Blob"];
  var Web_File_Url = $PS["Web.File.Url"];                
  var fromBlobs = $foreign["_fromBlobs"];
  var createObjectURLFromBlobs = function ($0) {
      return Web_File_Url.createObjectURL(fromBlobs($0));
  };
  exports["createObjectURLFromBlobs"] = createObjectURLFromBlobs;
})(PS);
(function(exports) {
  "use strict";

  exports.newMediaRecorder = function (stream) {
    return new MediaRecorder(stream);
  };

  exports.start = function (timeslice) {
    return function (mediaRecorder) {
      return function () {
        mediaRecorder.start(timeslice);
      };
    };
  };

  exports.stop = function (mediaRecorder) {
    return function () {
      try {
        mediaRecorder.stop();
      } catch (err) {
        console.error(err);
      }
    };
  };

  exports.onDataAvailable = function (cb) {
    return function (mediaRecorder) {
      return function () {
        mediaRecorder.ondataavailable = (blobEvent) => {
          return cb(blobEvent)();
        };
      };
    };
  };
})(PS["Foreign.MediaRecorder"] = PS["Foreign.MediaRecorder"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Foreign.MediaRecorder"] = $PS["Foreign.MediaRecorder"] || {};
  var exports = $PS["Foreign.MediaRecorder"];
  var $foreign = $PS["Foreign.MediaRecorder"];
  exports["newMediaRecorder"] = $foreign.newMediaRecorder;
  exports["start"] = $foreign.start;
  exports["stop"] = $foreign.stop;
  exports["onDataAvailable"] = $foreign.onDataAvailable;
})(PS);
(function(exports) {
  "use strict"

  exports._getUserMedia = function (constraints) {
    return function () {
      if (!navigator || !navigator.mediaDevices)
        return Promise.reject("No navigator");
      return navigator.mediaDevices.getUserMedia(constraints);
    };
  };
})(PS["Foreign.MediaStream"] = PS["Foreign.MediaStream"] || {});
(function(exports) {
    

  exports.thenImpl = function(promise) {
    return function(errCB) {
      return function(succCB) {
        return function() {
          promise.then(succCB, errCB);
        };
      };
    };
  };
})(PS["Control.Promise"] = PS["Control.Promise"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];                          
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];            
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  }; 
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either((function () {
                  var $90 = Control_Applicative.pure(dictMonad.Applicative0());
                  return function ($91) {
                      return $90(Data_Either.Left.create($91));
                  };
              })())(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, (function () {
          var $92 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($93) {
              return ExceptT($92(Data_Either.Right.create($93)));
          };
      })());
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, (function () {
          var $102 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($103) {
              return ExceptT($102(Data_Either.Left.create($103)));
          };
      })());
  };
  var altExceptT = function (dictSemigroup) {
      return function (dictMonad) {
          return new Control_Alt.Alt(function () {
              return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
          }, function (v) {
              return function (v1) {
                  return Control_Bind.bind(dictMonad.Bind1())(v)(function (rm) {
                      if (rm instanceof Data_Either.Right) {
                          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rm.value0));
                      };
                      if (rm instanceof Data_Either.Left) {
                          return Control_Bind.bind(dictMonad.Bind1())(v1)(function (rn) {
                              if (rn instanceof Data_Either.Right) {
                                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rn.value0));
                              };
                              if (rn instanceof Data_Either.Left) {
                                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(rm.value0)(rn.value0)));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [ rn.constructor.name ]);
                          });
                      };
                      throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [ rm.constructor.name ]);
                  });
              };
          });
      };
  };
  exports["runExceptT"] = runExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["altExceptT"] = altExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];                                                
  var runExcept = (function () {
      var $0 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      return function ($1) {
          return $0(Control_Monad_Except_Trans.runExceptT($1));
      };
  })();
  exports["runExcept"] = runExcept;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];                   
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Plus = $PS["Control.Plus"];                        
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Semigroup = $PS["Data.Semigroup"];                    
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var toList = function (v) {
      return new Cons(v.value0, v.value1);
  };
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done = true;
                              return acc;
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = new Data_Functor.Functor(listMap);                 
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              var $202 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
              return function ($203) {
                  return $202(f($203));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          var $204 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
          return function ($205) {
              return $204(rev($205));
          };
      };
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });           
  var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
      return function (as$prime) {
          return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
      };
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  exports["NonEmptyList"] = NonEmptyList;
  exports["plusList"] = plusList;
  exports["semigroupNonEmptyList"] = semigroupNonEmptyList;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var singleton = (function () {
      var $168 = Data_NonEmpty.singleton(Data_List_Types.plusList);
      return function ($169) {
          return Data_List_Types.NonEmptyList($168($169));
      };
  })();
  exports["singleton"] = singleton;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var fail = (function () {
      var $107 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity));
      return function ($108) {
          return $107(Data_List_NonEmpty.singleton($108));
      };
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  var readString = unsafeReadTagged("String");
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Promise"] = $PS["Control.Promise"] || {};
  var exports = $PS["Control.Promise"];
  var $foreign = $PS["Control.Promise"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Foreign = $PS["Foreign"];                
  var toAff$prime = function (customCoerce) {
      return function (p) {
          return Effect_Aff.makeAff(function (cb) {
              return Data_Functor.voidRight(Effect.functorEffect)(Data_Monoid.mempty(Effect_Aff.monoidCanceler))($foreign.thenImpl(p)(function ($1) {
                  return cb(Data_Either.Left.create(customCoerce($1)))();
              })(function ($2) {
                  return cb(Data_Either.Right.create($2))();
              }));
          });
      };
  };
  var coerce = function (fn) {
      return Data_Either.either(function (v) {
          return Effect_Exception.error("Promise failed, couldn't extract JS Error or String");
      })(Control_Category.identity(Control_Category.categoryFn))(Control_Monad_Except.runExcept(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Foreign.unsafeReadTagged("Error")(fn))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Effect_Exception.error)(Foreign.readString(fn)))));
  };
  var toAff = toAff$prime(coerce);
  var toAffE = function (f) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(toAff);
  };
  exports["toAffE"] = toAffE;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Foreign.MediaStream"] = $PS["Foreign.MediaStream"] || {};
  var exports = $PS["Foreign.MediaStream"];
  var $foreign = $PS["Foreign.MediaStream"];
  var Control_Promise = $PS["Control.Promise"];
  var Data_Newtype = $PS["Data.Newtype"];                
  var MediaStreamConstraints = function (x) {
      return x;
  };
  var newtypeMediaStreamContstraints = new Data_Newtype.Newtype(function (n) {
      return n;
  }, MediaStreamConstraints);
  var getUserMedia = function ($3) {
      return Control_Promise.toAffE($foreign["_getUserMedia"]($3));
  };
  var audioOnly = Data_Newtype.wrap(newtypeMediaStreamContstraints)({
      audio: true,
      video: false
  });
  exports["getUserMedia"] = getUserMedia;
  exports["audioOnly"] = audioOnly;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["React.Basic.Hooks.Aff"] = $PS["React.Basic.Hooks.Aff"] || {};
  var exports = $PS["React.Basic.Hooks.Aff"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var React_Basic_Hooks = $PS["React.Basic.Hooks"];
  var React_Basic_Hooks_Internal = $PS["React.Basic.Hooks.Internal"];
  var UseAff = function (x) {
      return x;
  };
  var ntUseAff = new Data_Newtype.Newtype(function (n) {
      return n;
  }, UseAff);
  var useAff = function (dictEq) {
      return function (deps) {
          return function (aff) {
              return React_Basic_Hooks_Internal.coerceHook(ntUseAff)(React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useState(Data_Maybe.Nothing.value))(function (v) {
                  return React_Basic_Hooks_Internal.discard(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useEffect(dictEq)(deps)(function __do() {
                      v.value1(Data_Function["const"](Data_Maybe.Nothing.value))();
                      var fiber = Effect_Aff.launchAff(Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(aff))(function (r) {
                          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(v.value1(function (v1) {
                              return new Data_Maybe.Just(r);
                          }));
                      }))();
                      return Effect_Aff.launchAff_(Effect_Aff.killFiber(Effect_Exception.error("Stale request cancelled"))(fiber));
                  }))(function () {
                      return React_Basic_Hooks_Internal.unsafeRenderEffect((function () {
                          if (v.value0 instanceof Data_Maybe.Just && v.value0.value0 instanceof Data_Either.Left) {
                              return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEffect)(v.value0.value0.value0);
                          };
                          if (v.value0 instanceof Data_Maybe.Just && v.value0.value0 instanceof Data_Either.Right) {
                              return Control_Applicative.pure(Effect.applicativeEffect)(new Data_Maybe.Just(v.value0.value0.value0));
                          };
                          if (v.value0 instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Maybe.Nothing.value);
                          };
                          throw new Error("Failed pattern match at React.Basic.Hooks.Aff (line 52, column 24 - line 55, column 30): " + [ v.value0.constructor.name ]);
                      })());
                  });
              }));
          };
      };
  };
  exports["useAff"] = useAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Hooks.VoiceRecorder"] = $PS["Hooks.VoiceRecorder"] || {};
  var exports = $PS["Hooks.VoiceRecorder"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var Foreign_Blob = $PS["Foreign.Blob"];
  var Foreign_MediaRecorder = $PS["Foreign.MediaRecorder"];
  var Foreign_MediaStream = $PS["Foreign.MediaStream"];
  var React_Basic_Hooks = $PS["React.Basic.Hooks"];
  var React_Basic_Hooks_Aff = $PS["React.Basic.Hooks.Aff"];
  var React_Basic_Hooks_Internal = $PS["React.Basic.Hooks.Internal"];
  var Type_Equality = $PS["Type.Equality"];                
  var Recording = (function () {
      function Recording() {

      };
      Recording.value = new Recording();
      return Recording;
  })();
  var Stopping = (function () {
      function Stopping() {

      };
      Stopping.value = new Stopping();
      return Stopping;
  })();
  var Idle = (function () {
      function Idle() {

      };
      Idle.value = new Idle();
      return Idle;
  })();
  var StartRecording = (function () {
      function StartRecording() {

      };
      StartRecording.value = new StartRecording();
      return StartRecording;
  })();
  var StopRecording = (function () {
      function StopRecording() {

      };
      StopRecording.value = new StopRecording();
      return StopRecording;
  })();
  var SetIdle = (function () {
      function SetIdle() {

      };
      SetIdle.value = new SetIdle();
      return SetIdle;
  })();
  var CleanUp = (function () {
      function CleanUp(value0) {
          this.value0 = value0;
      };
      CleanUp.create = function (value0) {
          return new CleanUp(value0);
      };
      return CleanUp;
  })();
  var OnData = (function () {
      function OnData(value0) {
          this.value0 = value0;
      };
      OnData.create = function (value0) {
          return new OnData(value0);
      };
      return OnData;
  })();
  var SetMediaRecorder = (function () {
      function SetMediaRecorder(value0) {
          this.value0 = value0;
      };
      SetMediaRecorder.create = function (value0) {
          return new SetMediaRecorder(value0);
      };
      return SetMediaRecorder;
  })();
  var UseVoiceRecorder = function (x) {
      return x;
  };
  var reducer = Effect_Unsafe.unsafePerformEffect(React_Basic_Hooks.mkReducer(function (s) {
      return function (a) {
          if (a instanceof OnData) {
              return {
                  chunks: Data_Array.cons(a.value0.data)(s.chunks),
                  status: s.status,
                  mmr: s.mmr,
                  murl: s.murl
              };
          };
          if (a instanceof StartRecording) {
              return {
                  status: Recording.value,
                  chunks: [  ],
                  mmr: s.mmr,
                  murl: s.murl
              };
          };
          if (a instanceof StopRecording) {
              return {
                  status: Stopping.value,
                  chunks: s.chunks,
                  mmr: s.mmr,
                  murl: s.murl
              };
          };
          if (a instanceof SetIdle) {
              return {
                  status: Idle.value,
                  chunks: s.chunks,
                  mmr: s.mmr,
                  murl: s.murl
              };
          };
          if (a instanceof CleanUp) {
              return {
                  mmr: Data_Maybe.Nothing.value,
                  murl: new Data_Maybe.Just(a.value0),
                  chunks: s.chunks,
                  status: s.status
              };
          };
          if (a instanceof SetMediaRecorder) {
              return {
                  mmr: a.value0,
                  chunks: s.chunks,
                  murl: s.murl,
                  status: s.status
              };
          };
          throw new Error("Failed pattern match at Hooks.VoiceRecorder (line 46, column 25 - line 52, column 48): " + [ a.constructor.name ]);
      };
  }));
  var ntUseVoiceRecorder = new Data_Newtype.Newtype(function (n) {
      return n;
  }, UseVoiceRecorder);
  var initialLocalState = {
      status: Idle.value,
      chunks: [  ],
      mmr: Data_Maybe.Nothing.value,
      murl: Data_Maybe.Nothing.value
  };
  var eqLocalStatus = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Recording && y instanceof Recording) {
              return true;
          };
          if (x instanceof Stopping && y instanceof Stopping) {
              return true;
          };
          if (x instanceof Idle && y instanceof Idle) {
              return true;
          };
          return false;
      };
  });
  var useVoiceRecorder = React_Basic_Hooks_Internal.coerceHook(ntUseVoiceRecorder)(React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useReducer(initialLocalState)(reducer))(function (v) {
      return React_Basic_Hooks_Internal.discard(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks_Aff.useAff(eqLocalStatus)(v.value0.status)((function () {
          var v1 = new Data_Tuple.Tuple(v.value0.status, v.value0.mmr);
          if (v1.value0 instanceof Recording) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Data_Functor.map(Effect_Aff.functorAff)(Foreign_MediaRecorder.newMediaRecorder)(Foreign_MediaStream.getUserMedia(Foreign_MediaStream.audioOnly)))(function (mr) {
                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                      Foreign_MediaRecorder.onDataAvailable(function ($31) {
                          return v.value1(OnData.create($31));
                      })(mr)();
                      Foreign_MediaRecorder.start(100)(mr)();
                      return v.value1(SetMediaRecorder.create(new Data_Maybe.Just(mr)))();
                  });
              });
          };
          if (v1.value0 instanceof Stopping && v1.value1 instanceof Data_Maybe.Just) {
              return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                  Foreign_MediaRecorder.stop(v1.value1.value0)();
                  return v.value1(SetIdle.value)();
              });
          };
          if (v1.value0 instanceof Idle && v1.value1 instanceof Data_Maybe.Just) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Foreign_Blob.createObjectURLFromBlobs(Data_Array.reverse(v.value0.chunks))))(function (url) {
                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(v.value1(new CleanUp(url)));
              });
          };
          return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit);
      })()))(function () {
          return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))({
              mUrl: v.value0.murl,
              start: v.value1(StartRecording.value),
              stop: v.value1(StopRecording.value),
              isRecording: Data_Eq.eq(eqLocalStatus)(v.value0.status)(Recording.value)
          });
      });
  }));
  exports["useVoiceRecorder"] = useVoiceRecorder;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Components.VoiceRecorder"] = $PS["Components.VoiceRecorder"] || {};
  var exports = $PS["Components.VoiceRecorder"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Hooks_AudioPlayback = $PS["Hooks.AudioPlayback"];
  var Hooks_VoiceRecorder = $PS["Hooks.VoiceRecorder"];
  var React_Basic_DOM = $PS["React.Basic.DOM"];
  var React_Basic_DOM_Events = $PS["React.Basic.DOM.Events"];
  var React_Basic_DOM_Generated = $PS["React.Basic.DOM.Generated"];
  var React_Basic_Events = $PS["React.Basic.Events"];
  var React_Basic_Hooks = $PS["React.Basic.Hooks"];
  var React_Basic_Hooks_Internal = $PS["React.Basic.Hooks.Internal"];
  var Type_Equality = $PS["Type.Equality"];                
  var mkVoiceRecorder = React_Basic_Hooks.component("VoiceRecorder")(function (v) {
      return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(Hooks_VoiceRecorder.useVoiceRecorder)(function (v1) {
          return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(Hooks_AudioPlayback.useAudioPlayback(v.onVoiceFinish))(function (v2) {
              return React_Basic_Hooks_Internal.discard(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useEffect(Data_Maybe.eqMaybe(Data_Eq.eqString))(v1.mUrl)(function __do() {
                  v2.setMUrl(v1.mUrl)();
                  Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v1.mUrl)(function (v3) {
                      return v.onRecordingFinish;
                  })();
                  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
              }))(function () {
                  var v3 = (function () {
                      if (v1.isRecording) {
                          return new Data_Tuple.Tuple(v1.stop, "Stop Recording");
                      };
                      if (!v1.isRecording) {
                          return new Data_Tuple.Tuple(Data_Semigroup.append(Effect.semigroupEffect(Data_Semigroup.semigroupUnit))(v1.start)(v.onRecordingStart), "Start Recording");
                      };
                      throw new Error("Failed pattern match at Components.VoiceRecorder (line 35, column 27 - line 37, column 74): " + [ v1.isRecording.constructor.name ]);
                  })();
                  var v4 = (function () {
                      if (v2.isPlaying) {
                          return new Data_Tuple.Tuple(Data_Semigroup.append(Effect.semigroupEffect(Data_Semigroup.semigroupUnit))(v2.stop)(v.onVoiceFinish), "Stop Playing");
                      };
                      if (!v2.isPlaying) {
                          return new Data_Tuple.Tuple(Data_Semigroup.append(Effect.semigroupEffect(Data_Semigroup.semigroupUnit))(v2.start)(v.onVoiceStart), "Start Playing");
                      };
                      throw new Error("Failed pattern match at Components.VoiceRecorder (line 39, column 27 - line 41, column 67): " + [ v2.isPlaying.constructor.name ]);
                  })();
                  return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))(React_Basic_DOM_Generated.div_([ React_Basic_DOM_Generated.button()({
                      onClick: React_Basic_Events.handler(React_Basic_DOM_Events.currentTarget)(function (v5) {
                          return v3.value0;
                      }),
                      children: [ React_Basic_DOM.text(v3.value1) ],
                      disabled: v.disabled || v2.isPlaying
                  }), React_Basic_DOM_Generated.button()({
                      onClick: React_Basic_Events.handler(React_Basic_DOM_Events.currentTarget)(function (v5) {
                          return v4.value0;
                      }),
                      children: [ React_Basic_DOM.text(v4.value1) ],
                      disabled: v.disabled || (v1.isRecording || Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(v1.mUrl)(Data_Maybe.Nothing.value))
                  }) ]));
              });
          });
      });
  });
  exports["mkVoiceRecorder"] = mkVoiceRecorder;
})(PS);
(function(exports) {
  "use strict";

  exports.error = function (s) {
    return function () {
      console.error(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["error"] = $foreign.error;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Class.Console"] = $PS["Effect.Class.Console"] || {};
  var exports = $PS["Effect.Class.Console"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var error = function (dictMonadEffect) {
      var $40 = Effect_Class.liftEffect(dictMonadEffect);
      return function ($41) {
          return $40(Effect_Console.error($41));
      };
  };
  exports["error"] = error;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Store"] = $PS["Store"] || {};
  var exports = $PS["Store"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Class_Console = $PS["Effect.Class.Console"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var React_Basic = $PS["React.Basic"];
  var React_Basic_Hooks = $PS["React.Basic.Hooks"];
  var React_Basic_Hooks_Internal = $PS["React.Basic.Hooks.Internal"];
  var Slice = $PS["Slice"];
  var Type_Equality = $PS["Type.Equality"];                
  var storeContext = Effect_Unsafe.unsafePerformEffect(React_Basic.createContext(new Data_Tuple.Tuple(Slice.initialState, function (v) {
      return Effect_Class_Console.error(Effect_Class.monadEffectEffect)("Dispatching with storeContext not initialized");
  })));
  var mkStoreProvider = function __do() {
      var reducer$prime = React_Basic_Hooks.mkReducer(Slice.reducer)();
      return React_Basic_Hooks.component("StoreProvider")(function (content) {
          return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useReducer(Slice.initialState)(reducer$prime))(function (value) {
              return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))(React_Basic.provider(storeContext)(value)(content));
          });
      })();
  };
  exports["storeContext"] = storeContext;
  exports["mkStoreProvider"] = mkStoreProvider;
})(PS);
(function($PS) {
  "use strict";
  $PS["Views.Home"] = $PS["Views.Home"] || {};
  var exports = $PS["Views.Home"];
  var Components_Controls = $PS["Components.Controls"];
  var Components_FileUpload = $PS["Components.FileUpload"];
  var Components_PlaybackOptions = $PS["Components.PlaybackOptions"];
  var Components_Player = $PS["Components.Player"];
  var Components_VoiceRecorder = $PS["Components.VoiceRecorder"];
  var Control_Applicative = $PS["Control.Applicative"];
  var React_Basic = $PS["React.Basic"];
  var React_Basic_DOM_Generated = $PS["React.Basic.DOM.Generated"];
  var React_Basic_DOM_Internal = $PS["React.Basic.DOM.Internal"];
  var React_Basic_Hooks = $PS["React.Basic.Hooks"];
  var React_Basic_Hooks_Internal = $PS["React.Basic.Hooks.Internal"];
  var Slice = $PS["Slice"];
  var Store = $PS["Store"];
  var Type_Equality = $PS["Type.Equality"];                
  var styledContainer = function (children) {
      return React_Basic_DOM_Generated.div()({
          style: React_Basic_DOM_Internal.css({
              width: "100%",
              display: "flex",
              flexDirection: "column",
              justifyContent: "center",
              alignItems: "center"
          }),
          children: children
      });
  };
  var mkHomeView = function __do() {
      var player = Components_Player.mkPlayer();
      var fileUpload = Components_FileUpload.mkFileUpload();
      var controls = Components_Controls.mkControls();
      var playbackOptions = Components_PlaybackOptions.mkPlaybackOptions();
      var voiceRecorder = Components_VoiceRecorder.mkVoiceRecorder();
      return React_Basic_Hooks.component("Home")(function (v) {
          return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useContext(Store.storeContext))(function (v1) {
              return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))((function () {
                  if (v1.value0 instanceof Slice.NotInitialized) {
                      return React_Basic.empty;
                  };
                  if (v1.value0 instanceof Slice.Initialized) {
                      return styledContainer([ player({
                          murl: v1.value0.value0.audioUrl,
                          status: v1.value0.value0.appStatus,
                          onSeek: function (v2) {
                              return v1.value1(Slice.StopAudio.value);
                          },
                          onReady: v1.value1(Slice.FinishLoading.value),
                          onFinish: v1.value1(Slice.StopAudio.value),
                          onRegionFinish: v1.value1(Slice.StopAudio.value)
                      }), fileUpload({
                          onFileUpload: function ($8) {
                              return v1.value1(Slice.SetAudioUrl.create($8));
                          },
                          disabled: Slice.selectIsNidle(v1.value0)
                      }), controls({
                          onPlay: v1.value1(Slice.PlayAudio.value),
                          onStop: v1.value1(Slice.StopAudio.value),
                          isPlaying: Slice.selectIsAudioPlaying(v1.value0),
                          disabled: Slice.selectIsAudioControlDisabled(v1.value0)
                      }), playbackOptions({
                          onChange: function ($9) {
                              return v1.value1(Slice.SetPlaybackOption.create($9));
                          },
                          currentValue: v1.value0.value0.playbackOption,
                          disabled: Slice.selectIsNidle(v1.value0)
                      }), voiceRecorder({
                          onRecordingStart: v1.value1(Slice.StartRecording.value),
                          onRecordingFinish: v1.value1(Slice.StopRecording.value),
                          onVoiceStart: v1.value1(Slice.PlayVoice.value),
                          onVoiceFinish: v1.value1(Slice.StopVoice.value),
                          disabled: Slice.selectIsRecordingDisabled(v1.value0)
                      }) ]);
                  };
                  throw new Error("Failed pattern match at Views.Home (line 39, column 9 - line 73, column 16): " + [ v1.value0.constructor.name ]);
              })());
          });
      })();
  };
  exports["mkHomeView"] = mkHomeView;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Views.Initial"] = $PS["Views.Initial"] || {};
  var exports = $PS["Views.Initial"];
  var Components_FileUpload = $PS["Components.FileUpload"];
  var Control_Applicative = $PS["Control.Applicative"];
  var React_Basic_DOM = $PS["React.Basic.DOM"];
  var React_Basic_DOM_Generated = $PS["React.Basic.DOM.Generated"];
  var React_Basic_Hooks = $PS["React.Basic.Hooks"];
  var React_Basic_Hooks_Internal = $PS["React.Basic.Hooks.Internal"];
  var Slice = $PS["Slice"];
  var Store = $PS["Store"];
  var Type_Equality = $PS["Type.Equality"];                
  var mkInitialView = function __do() {
      var fileUpload = Components_FileUpload.mkFileUpload();
      return React_Basic_Hooks.component("Initial")(function (v) {
          return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useContext(Store.storeContext))(function (v1) {
              return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))(React_Basic_DOM_Generated.div_([ React_Basic_DOM.text("Initial view"), fileUpload({
                  onFileUpload: function ($5) {
                      return v1.value1(Slice.SetAudioUrl.create($5));
                  },
                  disabled: false
              }) ]));
          });
      })();
  };
  exports["mkInitialView"] = mkInitialView;
})(PS);
(function(exports) {
  "use strict";

  exports._getElementById = function (id) {
    return function (node) {
      return function () {
        return node.getElementById(id);
      };
    };
  };
})(PS["Web.DOM.NonElementParentNode"] = PS["Web.DOM.NonElementParentNode"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.NonElementParentNode"] = $PS["Web.DOM.NonElementParentNode"] || {};
  var exports = $PS["Web.DOM.NonElementParentNode"];
  var $foreign = $PS["Web.DOM.NonElementParentNode"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];                
  var getElementById = function (eid) {
      var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      var $1 = $foreign["_getElementById"](eid);
      return function ($2) {
          return $0($1($2));
      };
  };
  exports["getElementById"] = getElementById;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Components_Spinner = $PS["Components.Spinner"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Exception = $PS["Effect.Exception"];
  var React_Basic = $PS["React.Basic"];
  var React_Basic_DOM = $PS["React.Basic.DOM"];
  var React_Basic_Hooks = $PS["React.Basic.Hooks"];
  var React_Basic_Hooks_Internal = $PS["React.Basic.Hooks.Internal"];
  var Slice = $PS["Slice"];
  var Store = $PS["Store"];
  var Type_Equality = $PS["Type.Equality"];
  var Views_Home = $PS["Views.Home"];
  var Views_Initial = $PS["Views.Initial"];
  var Web_DOM_NonElementParentNode = $PS["Web.DOM.NonElementParentNode"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var mkApp = function __do() {
      var initialView = Views_Initial.mkInitialView();
      var homeView = Views_Home.mkHomeView();
      var spinner = Components_Spinner.mkSpinner();
      return React_Basic_Hooks.component("App")(function (props) {
          return React_Basic_Hooks_Internal.bind(React_Basic_Hooks_Internal.ixBindRender)(React_Basic_Hooks.useContext(Store.storeContext))(function (v) {
              return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))(React_Basic.fragment([ (function () {
                  if (v.value0 instanceof Slice.NotInitialized) {
                      return initialView(Data_Unit.unit);
                  };
                  if (v.value0 instanceof Slice.Initialized) {
                      return homeView(Data_Unit.unit);
                  };
                  throw new Error("Failed pattern match at Main (line 29, column 13 - line 31, column 45): " + [ v.value0.constructor.name ]);
              })(), spinner({
                  isLoading: Slice.selectIsLoading(v.value0)
              }) ]));
          });
      })();
  };
  var mkWrappedApp = function __do() {
      var storeProvider = Store.mkStoreProvider();
      var app = mkApp();
      return React_Basic_Hooks.component("WrappedApp")(function (props) {
          return Control_Applicative.pure(React_Basic_Hooks_Internal.applicativeRender(Type_Equality.refl))(storeProvider([ app(Data_Unit.unit) ]));
      })();
  };
  var main = function __do() {
      var mContainer = Control_Bind.bindFlipped(Effect.bindEffect)(Web_DOM_NonElementParentNode.getElementById("root"))(Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toNonElementParentNode)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window)))();
      if (mContainer instanceof Data_Maybe.Nothing) {
          return Effect_Exception["throw"]("Could not find body.")();
      };
      if (mContainer instanceof Data_Maybe.Just) {
          var app = mkWrappedApp();
          return React_Basic_DOM.render(app(Data_Unit.unit))(mContainer.value0)();
      };
      throw new Error("Failed pattern match at Main (line 45, column 3 - line 49, column 34): " + [ mContainer.constructor.name ]);
  };
  exports["mkApp"] = mkApp;
  exports["mkWrappedApp"] = mkWrappedApp;
  exports["main"] = main;
})(PS);
PS["Main"].main();